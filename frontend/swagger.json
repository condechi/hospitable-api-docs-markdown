{
    "swagger": "2.0",
    "info": {
        "title": "Plexxi Connect",
        "description": "Plexxi Connect API Documentation",
        "version": "1.0",
        "contact": {
            "name": "Plexxi",
            "url": "http://www.plexxi.com",
            "email": "support@plexxi.com"
        }
    },
    "basePath": "/api",
    "tags": [
        {
            "name": "support_bundles",
            "description": "Support Bundle"
        },
        {
            "name": "packs",
            "description": "Packs"
        },
        {
            "name": "version",
            "description": "API Version"
        },
        {
            "name": "affinity_groups",
            "description": "Affinity Group"
        },
        {
            "name": "affinity_links",
            "description": "Affinity Link"
        },
        {
            "name": "auth",
            "description": "Authentication"
        },
        {
            "name": "certificate",
            "description": "Certificates"
        },
        {
            "name": "devicemap",
            "description": "Mapped Network Devices"
        },
        {
            "name": "fabrics",
            "description": "Fabric"
        },
        {
            "name": "fitting_results",
            "description": "Fitting Result"
        },
        {
            "name": "nutanix",
            "description": "Nutanix Prism"
        },
        {
            "name": "plexxi",
            "description": "Plexxi Control"
        },
        {
            "name": "ports",
            "description": "Port"
        },
        {
            "name": "switches",
            "description": "Switch"
        },
        {
            "name": "user",
            "description": "Plexxi Connect Users"
        },
        {
            "name": "vlanaffinity",
            "description": "Vlan Affinities"
        },
        {
            "name": "vsphere",
            "description": "vSphere"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/auth/token": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Get an API key",
                "description": "",
                "operationId": "getApiKey",
                "security": [],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth_credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Authentication",
                        "schema": {
                            "description": "Authorization Result",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "description": "API Key",
                                            "type": "string",
                                            "example": "example_api-key_iZkjs8-Yc2LzRjpwKbai11kkPZg"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Format",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid Credentials",
                        "schema": {
                            "$ref": "#/definitions/AuthErrorResponse"
                        }
                    }
                }
            }
        },
        "/certificates/ssl": {
            "get": {
                "tags": [
                    "certificate"
                ],
                "summary": "Current Certificate Information",
                "description": "",
                "operationId": "getCertificateInfo",
                "produces": [
                    "application/json; version=1.0"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/certificate_response"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "certificate"
                ],
                "summary": "Replace SSL/TLS Certificate",
                "description": "",
                "operationId": "replaceSslCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "New Certificate",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "certificate": {
                                    "type": "string",
                                    "minLength": 1,
                                    "title": "Certificate"
                                },
                                "private_key": {
                                    "type": "string",
                                    "minLength": 1,
                                    "title": "Private Key"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "certificate",
                                "private_key"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate Successfully Replaced",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Format",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/certificates/ssl/regenerate": {
            "post": {
                "tags": [
                    "certificate"
                ],
                "summary": "Regenerate Self-Signed Certificate",
                "description": "",
                "operationId": "regenerateSslCertificate",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "responses": {
                    "200": {
                        "description": "Certificate Successfully Replaced",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/support_bundles": {
            "post": {
                "tags": [
                    "support_bundles"
                ],
                "summary": "Generate new support bundle",
                "description": "",
                "operationId": "createSupportBundle",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "upload",
                        "description": "Upload bundle after generation",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bundle generated successfully",
                        "schema": {
                            "$ref": "#/definitions/support_bundles_response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "support_bundles"
                ],
                "summary": "List previously created support bundles",
                "description": "",
                "operationId": "listSupportBundle",
                "produces": [
                    "application/json; version=1.0"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/support_bundles_list_response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "support_bundles"
                ],
                "summary": "Delete all previously created support bundles",
                "description": "",
                "operationId": "deleteAllSupportBundle",
                "produces": [
                    "application/json; version=1.0"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "description": "Count of deleted bundles",
                                            "type": "number",
                                            "example": 3
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/support_bundles/{name}": {
            "get": {
                "tags": [
                    "support_bundles"
                ],
                "summary": "Retrieve metadata about a single support bundle",
                "description": "",
                "operationId": "getSupportBundle",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of support bundle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/support_bundles_response"
                        }
                    },
                    "404": {
                        "description": "support bundle not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "support_bundles"
                ],
                "summary": "Delete a single support bundle",
                "description": "",
                "operationId": "deleteSupportBundle",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of support bundle",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/packs": {
            "get": {
                "tags": [
                    "packs"
                ],
                "summary": "List of packs",
                "operationId": "listPacks",
                "produces": [
                    "application/json; version=1.0"
                ],
                "responses": {
                    "200": {
                        "description": "List of packs",
                        "schema": {
                            "$ref": "#/definitions/pack_list_response"
                        }
                    }
                }
            }
        },
        "/packs/{pack}/schema": {
            "get": {
                "tags": [
                    "packs"
                ],
                "summary": "Get pack configuration schema",
                "description": "Return the pack configuration in json-schema format.",
                "operationId": "getPackSchema",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "pack",
                        "in": "path",
                        "description": "Name of pack",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pack schema",
                        "schema": {
                            "$ref": "#/definitions/pack_schema_response"
                        }
                    },
                    "404": {
                        "description": "Pack Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/device_maps": {
            "delete": {
                "tags": [
                    "devicemap"
                ],
                "summary": "Delete the Mapped Network Device configuration",
                "description": "* Deletes the entire Mapped Network Device configuration.",
                "operationId": "deleteDeviceMap",
                "produces": [
                    "application/json; version=1.0"
                ],
                "responses": {
                    "200": {
                        "description": "Mapped Network Device configuration deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "devicemap"
                ],
                "summary": "Retrieve a list of Network Device Mapping configurations",
                "description": "",
                "operationId": "listDeviceMap",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/device_map_list_response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "devicemap"
                ],
                "summary": "Add a new Network Device Map configuration",
                "description": "* A single object or an array of objects can be sent.\n* If an array is sent, an array of the resulting IDs will be returned.",
                "operationId": "addDeviceMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Mapped Network Devices",
                        "schema": {
                            "$ref": "#/definitions/device_map"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device Mapping Added Successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "devicemap"
                ],
                "summary": "Replace Network Device Map configuration",
                "description": "Replaces all existing Network Device Maps",
                "operationId": "replaceDeviceMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Mapped Network Devices",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/device_map"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device Mapping Added Successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": [
                                                    1,
                                                    2,
                                                    3
                                                ]
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/device_maps/{ID}": {
            "delete": {
                "tags": [
                    "devicemap"
                ],
                "summary": "Delete a Network Device Mapping by ID",
                "description": "* Deletes a single Mapped Network Device configuration.",
                "operationId": "deleteDeviceMapEntry",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "ID of Device Mapping Entry to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mapped Network Device configuration deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "devicemap"
                ],
                "summary": "Get a Network Device Mapping by ID",
                "description": "",
                "operationId": "getDeviceMapping",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "ID of Device Mapping Entry to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "description": "Device Mapping Result",
                            "$ref": "#/definitions/device_map_response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "devicemap"
                ],
                "summary": "Update a Network Device Mapping configuration by ID.",
                "description": "",
                "operationId": "updateDeviceMap",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "ID of Device Mapping Entry to return",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Mapped Network Devices",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/device_map"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Device Mapping Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vlan_affinity": {
            "delete": {
                "tags": [
                    "vlanaffinity"
                ],
                "summary": "Delete all Vlan Affinities",
                "description": "* Deletes all Vlan Affinities.",
                "operationId": "deleteAffinityVlanTopology",
                "produces": [
                    "application/json; version=1.0"
                ],
                "responses": {
                    "200": {
                        "description": "Vlan Affinities deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "vlanaffinity"
                ],
                "summary": "Retrieve a list of Vlan Affinities",
                "description": "",
                "operationId": "listAffinityVlanTopology",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vlan_affinity_list_response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vlanaffinity"
                ],
                "summary": "Add a new Vlan Affinity",
                "description": "* A single object or an array of objects can be sent.\n* If an array is sent, an array of the resulting IDs will be returned.",
                "operationId": "addAffinityVlanTopology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Vlan Affinities",
                        "schema": {
                            "$ref": "#/definitions/vlan_affinity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vlan Affinity Added Successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Invalid Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vlan_affinity/{ID}": {
            "delete": {
                "tags": [
                    "vlanaffinity"
                ],
                "summary": "Delete a Vlan Affinity by ID",
                "description": "* Deletes a single Vlan Affinity.",
                "operationId": "deleteAffinityVlanTopologyEntry",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "ID of Vlan Affinity to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vlan Affinity deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "vlanaffinity"
                ],
                "summary": "Get a Vlan Affinity by ID",
                "description": "",
                "operationId": "getAffinityVlanTopology",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "ID of Vlan Affinity to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "description": "Vlan Affinity Result",
                            "$ref": "#/definitions/vlan_affinity_response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vlanaffinity"
                ],
                "summary": "Update a Vlan Affinity by ID.",
                "description": "",
                "operationId": "updateAffinityVlanTopology",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "ID of Vlan Affinity to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Vlan Affinities",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vlan_affinity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vlan Affinity Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Retrieve a list of users",
                "description": "",
                "operationId": "listUsers",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user_list_response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Add a new user",
                "description": "* A user with the username \"current\" cannot be created.\n* If there is only one Administrator remaining, it's role cannot be changed.",
                "operationId": "addUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Plexxi Connect Users",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Added Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Find a user by username",
                "description": "Requesting the username \"current\" returns the currently authenticated user.",
                "operationId": "getUser",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Username of user to return",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user_response"
                        }
                    },
                    "400": {
                        "description": "Invalid Username",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Update a user by username",
                "description": "Updating the username \"current\" updates the currently authenticated user.",
                "operationId": "updateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Username of user to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Plexxi Connect Users",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Username Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete a user by username",
                "description": "* Deleting the user \"current\" will delete the currently authenticated user.\n* If there is only one Administrator remaining, it cannot be deleted.",
                "operationId": "deleteUser",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "Username of user to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Deleted Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Username",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Username Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/current/change_password": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Change current user's password",
                "description": "* Given the user's current and new password a new authentication token will be returned.",
                "operationId": "changePassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "current_password": {
                                    "description": "User's current password",
                                    "type": "string"
                                },
                                "new_password": {
                                    "description": "New password",
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password successfully changed",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "description": "Authentication token",
                                            "type": "string",
                                            "example": "example_api-key_iZkjs8-Yc2LzRjpwKbai11kkPZg"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Input or Bad Current Password",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/version": {
            "get": {
                "tags": [
                    "version"
                ],
                "summary": "API Version",
                "description": "This endpoint does not require authorization.",
                "operationId": "getVersion",
                "security": [],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "API Version",
                        "schema": {
                            "$ref": "#/definitions/version_response"
                        }
                    }
                }
            }
        },
        "/vmware/plugin/register": {
            "post": {
                "tags": [
                    "vsphere"
                ],
                "summary": "Register the Plexxi Connect vSphere Web Client Plugin with vCenter",
                "description": "* To register using the credentials of an existing registration, only provide the host.\n* The IP address of Plexxi Connect must be accessible to vCenter. If it is not the API may incorrectly report a successful response.",
                "operationId": "registerVSpherePlugin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "vCenter Credentials",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vsphere_registration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registration Succcessful",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Registration Failed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/nutanix/prisms": {
            "get": {
                "tags": [
                    "nutanix"
                ],
                "summary": "Retrieve a list of Nutanix Prism configurations",
                "description": "",
                "operationId": "listnutanixConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/nutanix_pack_list_response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "nutanix"
                ],
                "summary": "Add a new Nutanix Prism configuration",
                "description": "* If query parameter 'verify' equals 'only', no configuration is saved and success result is empty.",
                "operationId": "addnutanixConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Nutanix Prism",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/nutanix_pack"
                        }
                    },
                    {
                        "name": "verify",
                        "in": "query",
                        "description": "Optionally verify config data by establishing a connection.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "true",
                            "false",
                            "only"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Added Successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "description": "empty if 'verify' equals 'only', new Id otherwise",
                                            "type": "object",
                                            "example": {
                                                "id": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Input or Connection Verification Failed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/nutanix/prisms/{configID}": {
            "get": {
                "tags": [
                    "nutanix"
                ],
                "summary": "Get a Nutanix Prism configuration by ID",
                "description": "",
                "operationId": "getnutanixConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/nutanix_pack_response"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "nutanix"
                ],
                "summary": "Update a Nutanix Prism configuration by ID",
                "description": "",
                "operationId": "updatenutanixConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Nutanix Prism configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/nutanix_pack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "nutanix"
                ],
                "summary": "Delete a Nutanix Prism configuration by ID",
                "description": "",
                "operationId": "deletenutanixConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Deleted Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/nutanix/prisms/{configID}/verify": {
            "post": {
                "tags": [
                    "nutanix"
                ],
                "summary": "Verify connectivity of a Nutanix Prism configuration by ID",
                "description": "",
                "operationId": "verifynutanixConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to verify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection Verification Succeeded",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Connection Verification Failed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Retrieve a list of Plexxi Control configurations",
                "description": "",
                "operationId": "listplexxiConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/plexxi_pack_list_response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Add a new Plexxi Control configuration",
                "description": "* If query parameter 'verify' equals 'only', no configuration is saved and success result is empty.",
                "operationId": "addplexxiConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Plexxi Control",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plexxi_pack"
                        }
                    },
                    {
                        "name": "verify",
                        "in": "query",
                        "description": "Optionally verify config data by establishing a connection.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "true",
                            "false",
                            "only"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Added Successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "description": "empty if 'verify' equals 'only', new Id otherwise",
                                            "type": "object",
                                            "example": {
                                                "id": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Input or Connection Verification Failed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Get a Plexxi Control configuration by ID",
                "description": "",
                "operationId": "getplexxiConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/plexxi_pack_response"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Update a Plexxi Control configuration by ID",
                "description": "",
                "operationId": "updateplexxiConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Plexxi Control configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/plexxi_pack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Delete a Plexxi Control configuration by ID",
                "description": "",
                "operationId": "deleteplexxiConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Deleted Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/verify": {
            "post": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Verify connectivity of a Plexxi Control configuration by ID",
                "description": "",
                "operationId": "verifyplexxiConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to verify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection Verification Succeeded",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Connection Verification Failed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters": {
            "get": {
                "tags": [
                    "vsphere"
                ],
                "summary": "Retrieve a list of vSphere configurations",
                "description": "",
                "operationId": "listvsphereConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vsphere_pack_list_response"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "vsphere"
                ],
                "summary": "Add a new vSphere configuration",
                "description": "* If query parameter 'verify' equals 'only', no configuration is saved and success result is empty.",
                "operationId": "addvsphereConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "vSphere",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vsphere_pack"
                        }
                    },
                    {
                        "name": "verify",
                        "in": "query",
                        "description": "Optionally verify config data by establishing a connection.",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "true",
                            "false",
                            "only"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Added Successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/Response"
                                },
                                {
                                    "properties": {
                                        "result": {
                                            "description": "empty if 'verify' equals 'only', new Id otherwise",
                                            "type": "object",
                                            "example": {
                                                "id": 1
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid Input or Connection Verification Failed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{configID}": {
            "get": {
                "tags": [
                    "vsphere"
                ],
                "summary": "Get a vSphere configuration by ID",
                "description": "",
                "operationId": "getvsphereConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/vsphere_pack_response"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "vsphere"
                ],
                "summary": "Update a vSphere configuration by ID",
                "description": "",
                "operationId": "updatevsphereConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "vSphere configuration",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vsphere_pack"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid Input",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "vsphere"
                ],
                "summary": "Delete a vSphere configuration by ID",
                "description": "",
                "operationId": "deletevsphereConfig",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration Deleted Successfully",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/vmware/vcenters/{configID}/verify": {
            "post": {
                "tags": [
                    "vsphere"
                ],
                "summary": "Verify connectivity of a vSphere configuration by ID",
                "description": "",
                "operationId": "verifyvsphereConfig",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of configuration to verify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection Verification Succeeded",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "Connection Verification Failed",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "ID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/affinity_groups": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Retrieve a list of Affinity Group objects",
                "description": "",
                "operationId": "listaffinity_groups",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Affinity group type to return",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "endpoint"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/affinity_groups_plexxi_list_response"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/affinity_groups/{UUID}": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Get a Affinity Group by UUID",
                "description": "",
                "operationId": "getaffinity_groupsByUUID",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "UUID",
                        "in": "path",
                        "description": "UUID of Affinity Group to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/affinity_groups_plexxi_response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "UUID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/affinity_links": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Retrieve a list of Affinity Link objects",
                "description": "",
                "operationId": "listaffinity_links",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/affinity_links_plexxi_list_response"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/affinity_links/{UUID}": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Get a Affinity Link by UUID",
                "description": "",
                "operationId": "getaffinity_linksByUUID",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "UUID",
                        "in": "path",
                        "description": "UUID of Affinity Link to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/affinity_links_plexxi_response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "UUID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/fabrics": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Retrieve a list of Fabric objects",
                "description": "",
                "operationId": "listfabrics",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fabrics_plexxi_list_response"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/fabrics/{UUID}": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Get a Fabric by UUID",
                "description": "",
                "operationId": "getfabricsByUUID",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "UUID",
                        "in": "path",
                        "description": "UUID of Fabric to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fabrics_plexxi_response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "UUID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/fitting_results": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Retrieve a list of Fitting Result objects",
                "description": "",
                "operationId": "listfitting_results",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return fitting results with the given state",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "applied"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fitting_results_plexxi_list_response"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/fitting_results/{UUID}": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Get a Fitting Result by UUID",
                "description": "",
                "operationId": "getfitting_resultsByUUID",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "UUID",
                        "in": "path",
                        "description": "UUID of Fitting Result to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/fitting_results_plexxi_response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "UUID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/ports": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Retrieve a list of Port objects",
                "description": "",
                "operationId": "listports",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "switch",
                        "in": "query",
                        "description": "Return ports for the switch with the given UUID",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ports_plexxi_list_response"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/ports/{UUID}": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Get a Port by UUID",
                "description": "",
                "operationId": "getportsByUUID",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "UUID",
                        "in": "path",
                        "description": "UUID of Port to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ports_plexxi_response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "UUID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/switches": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Retrieve a list of Switch objects",
                "description": "",
                "operationId": "listswitches",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "fabric",
                        "in": "query",
                        "description": "Return switches for the fabric with the given UUID",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ports",
                        "in": "query",
                        "description": "Include array of ports with each switch object",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/switches_plexxi_list_response"
                        }
                    }
                }
            }
        },
        "/plexxi/controls/{configID}/switches/{UUID}": {
            "get": {
                "tags": [
                    "plexxi"
                ],
                "summary": "Get a Switch by UUID",
                "description": "",
                "operationId": "getswitchesByUUID",
                "produces": [
                    "application/json; version=1.0"
                ],
                "parameters": [
                    {
                        "name": "configID",
                        "in": "path",
                        "description": "ID of Plexxi Connect configuration",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "UUID",
                        "in": "path",
                        "description": "UUID of Switch to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/switches_plexxi_response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "UUID Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "security": {
        "api_key": []
    },
    "definitions": {
        "Response": {
            "title": "Response",
            "discriminator": "result",
            "type": "object",
            "properties": {
                "result": {
                    "example": "null"
                },
                "time": {
                    "type": "string",
                    "description": "Elapsed time for operation",
                    "example": "1ms"
                }
            },
            "required": [
                "result",
                "time"
            ]
        },
        "ErrorResponse": {
            "title": "Error Response",
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "description": "Error description",
                            "example": "Description of the error",
                            "type": "string"
                        }
                    }
                }
            ]
        },
        "AuthErrorResponse": {
            "title": "Authentication Error Response",
            "allOf": [
                {
                    "$ref": "#/definitions/ErrorResponse"
                },
                {
                    "properties": {
                        "result": {
                            "example": "Invalid credentials"
                        }
                    }
                }
            ]
        },
        "auth_credentials": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string",
                    "minLength": 1,
                    "title": "Username"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 1,
                    "title": "Password"
                }
            },
            "additionalProperties": false,
            "required": [
                "username",
                "password"
            ]
        },
        "certificate_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "properties": {
                                "issuer": {
                                    "description": "Issuer",
                                    "type": "string",
                                    "example": "Plexxi"
                                },
                                "common_name": {
                                    "description": "Common Name",
                                    "type": "string",
                                    "example": "connect.plexxi.internal"
                                },
                                "subject_alternative_name": {
                                    "description": "Subject Alternative Names",
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "example": [
                                        "connect.plexxi.internal",
                                        "connect",
                                        "192.168.1.100"
                                    ]
                                },
                                "not_before": {
                                    "description": "Validity Start Date",
                                    "type": "string",
                                    "example": "2016-06-16T22:01:45Z"
                                },
                                "not_after": {
                                    "description": "Validity End Date",
                                    "type": "string",
                                    "example": "2026-06-14T22:01:45Z"
                                },
                                "self_signed": {
                                    "description": "Whether the certificate is self signed",
                                    "type": "boolean",
                                    "example": true
                                }
                            }
                        }
                    }
                }
            ]
        },
        "pack": {
            "type": "object",
            "title": "Pack",
            "properties": {
                "name": {
                    "description": "Pack name",
                    "type": "string",
                    "example": "plexxi"
                },
                "description": {
                    "description": "Pack description",
                    "type": "string",
                    "example": "Pack integrated with Plexxi Control"
                },
                "keywords": {
                    "description": "Integration pack keywords",
                    "type": "string",
                    "example": [
                        "plexxi",
                        "network"
                    ]
                },
                "version": {
                    "description": "Integration pack version number",
                    "type": "string",
                    "example": "2.2.0"
                },
                "author": {
                    "description": "Pack author",
                    "type": "string",
                    "example": "Plexxi"
                },
                "email": {
                    "description": "Author email",
                    "type": "string",
                    "example": "support@plexxi.com"
                }
            }
        },
        "pack_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pack"
                            }
                        }
                    }
                }
            ]
        },
        "pack_schema_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "properties": {
                                "$schema": {
                                    "type": "string",
                                    "example": "http://json-schema.org/schema#"
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Plexxi Control"
                                },
                                "x-base-path": {
                                    "type": "string",
                                    "example": "plexxi/controls"
                                },
                                "type": {
                                    "type": "string",
                                    "example": "array"
                                },
                                "maxLength": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "title": {
                                            "type": "string",
                                            "example": "Configuration"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "object"
                                        },
                                        "properties": {
                                            "type": "object",
                                            "properties": {
                                                "host": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "string"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "hostname"
                                                        },
                                                        "minLength": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "maxLength": {
                                                            "type": "integer",
                                                            "example": 200
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Host"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Hostname or IP address of Plexxi Control"
                                                        },
                                                        "unique": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    }
                                                },
                                                "username": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "string"
                                                        },
                                                        "minLength": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "maxLength": {
                                                            "type": "integer",
                                                            "example": 200
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Username"
                                                        }
                                                    }
                                                },
                                                "password": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "string"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "password"
                                                        },
                                                        "minLength": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "maxLength": {
                                                            "type": "integer",
                                                            "example": 200
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Password"
                                                        },
                                                        "secret": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    }
                                                },
                                                "verify_ssl": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "boolean"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Verify SSL"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Indicates whether SSL/TLS certificates should be validated when connecting to Plexxi Control"
                                                        }
                                                    }
                                                },
                                                "enabled": {
                                                    "type": "object",
                                                    "properties": {
                                                        "type": {
                                                            "type": "string",
                                                            "example": "boolean"
                                                        },
                                                        "format": {
                                                            "type": "string",
                                                            "example": "password"
                                                        },
                                                        "title": {
                                                            "type": "string",
                                                            "example": "Enabled"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Indicates whether this configuration should be enabled"
                                                        },
                                                        "default": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "additionalProperties": {
                                    "type": "boolean",
                                    "example": false
                                },
                                "required": {
                                    "type": "string",
                                    "example": [
                                        "host",
                                        "username",
                                        "password",
                                        "verify_ssl",
                                        "enabled"
                                    ]
                                }
                            }
                        }
                    }
                }
            ]
        },
        "support_bundles": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Bundle Name",
                    "type": "string",
                    "example": "plexxi-connect-supportbundles-2016-02-23-221648.tar.gz"
                },
                "url": {
                    "description": "Download URL",
                    "type": "string",
                    "example": "/api/files/plexxi-connect-supportbundles-2016-02-23-221648.tar.gz?key=g6YK9F-Raiwu_r3ARrMI5PnUIk4"
                },
                "date_created": {
                    "description": "Date and time file was created in RFC 3339 format",
                    "type": "string",
                    "example": "2016-02-23T22:16:49Z"
                }
            }
        },
        "support_bundles_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/support_bundles"
                        }
                    }
                }
            ]
        },
        "support_bundles_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/support_bundles"
                            }
                        }
                    }
                }
            ]
        },
        "version_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "properties": {
                                "current": {
                                    "type": "string",
                                    "example": "1"
                                },
                                "supported": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "example": [
                                        "1",
                                        "2"
                                    ]
                                },
                                "software": {
                                    "type": "string",
                                    "example": "2.1.0-304"
                                }
                            }
                        }
                    }
                }
            ]
        },
        "device_map_id": {
            "allOf": [
                {
                    "$ref": "#/definitions/device_map"
                },
                {
                    "properties": {
                        "id": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                }
            ]
        },
        "device_map_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/device_map_id"
                        }
                    }
                }
            ]
        },
        "device_map_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/device_map_id"
                            }
                        }
                    }
                }
            ]
        },
        "device_map": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Host Name"
                },
                "host_interface": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Host Port"
                },
                "switch_mac": {
                    "type": "string",
                    "minLength": 17,
                    "maxLength": 17,
                    "description": "MAC Address of Plexxi Switch",
                    "pattern": "^E0:39:D7:([0-9A-Fa-f]{2}[:-]){2}([0-9A-Fa-f]{2})$"
                },
                "switch_port": {
                    "type": "integer",
                    "multipleOf": 1,
                    "maximum": 256,
                    "minimum": 1,
                    "description": "Plexxi Switch Port number where host is connected"
                }
            },
            "additionalProperties": false,
            "required": [
                "host",
                "host_interface",
                "switch_mac",
                "switch_port"
            ]
        },
        "vlan_affinity_id": {
            "allOf": [
                {
                    "$ref": "#/definitions/vlan_affinity"
                },
                {
                    "properties": {
                        "id": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                }
            ]
        },
        "vlan_affinity_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "$ref": "#/definitions/vlan_affinity_id"
                        }
                    }
                }
            ]
        },
        "vlan_affinity_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/vlan_affinity_id"
                            }
                        }
                    }
                }
            ]
        },
        "vlan_affinity": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Name",
                    "minLength": 1,
                    "description": "Vlan Affinity Name"
                },
                "vlans": {
                    "type": "string",
                    "title": "VLAN Range",
                    "minLength": 1,
                    "format": "vlan-range",
                    "description": "VLANs assigned to this Vlan Affinity"
                },
                "fit_style": {
                    "type": "string",
                    "title": "Fit Style",
                    "description": "Style of Fit to use",
                    "enum": [
                        "Incremental",
                        "Full",
                        "Off"
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "name",
                "vlans",
                "fit_style"
            ]
        },
        "user_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "User",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "minLength": 1,
                                        "title": "Username",
                                        "example": "admin"
                                    },
                                    "role": {
                                        "type": "string",
                                        "title": "Role",
                                        "enum": [
                                            "Administrator",
                                            "Operator",
                                            "Viewer"
                                        ]
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "username",
                                    "password",
                                    "role"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "user_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "title": "User",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "minLength": 1,
                                    "title": "Username",
                                    "example": "admin"
                                },
                                "role": {
                                    "type": "string",
                                    "title": "Role",
                                    "enum": [
                                        "Administrator",
                                        "Operator",
                                        "Viewer"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "username",
                                "password",
                                "role"
                            ]
                        }
                    }
                }
            ]
        },
        "user": {
            "type": "object",
            "title": "User",
            "properties": {
                "username": {
                    "type": "string",
                    "minLength": 1,
                    "title": "Username",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 1,
                    "title": "Password",
                    "example": "A very long and secure password"
                },
                "role": {
                    "type": "string",
                    "title": "Role",
                    "enum": [
                        "Administrator",
                        "Operator",
                        "Viewer"
                    ]
                }
            },
            "additionalProperties": false,
            "required": [
                "username",
                "password",
                "role"
            ]
        },
        "vsphere_registration": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "vSphere Hostname or IP Address"
                },
                "username": {
                    "type": "string",
                    "description": "vSphere Username"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "description": "vSphere Password"
                },
                "verify_ssl": {
                    "type": "boolean",
                    "description": "vSphere Certificate Verification",
                    "default": false
                }
            },
            "required": [
                "host"
            ]
        },
        "nutanix_pack": {
            "title": "Configuration",
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "format": "hostname",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Host",
                    "description": "Hostname or IP address of Nutanix Prism"
                },
                "username": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Username"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Password"
                },
                "verify_ssl": {
                    "type": "boolean",
                    "title": "Verify SSL",
                    "description": "Indicates whether SSL/TLS certificates should be validated when connecting to Nutanix Prism"
                },
                "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Indicates whether this configuration should be enabled",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "title": "Name",
                    "maxLength": 200
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "maxLength": 1000
                },
                "fitting": {
                    "type": "boolean",
                    "title": "CVM Fitting",
                    "description": "Indicates if CVM network traffic will be affinitized",
                    "default": false
                },
                "control_visualization": {
                    "type": "boolean",
                    "title": "Plexxi Control Network Visualization for AHV",
                    "description": "Indicates whether Plexxi Control's Network Visualization will be populated when the Acropolis Hypervisor is used",
                    "default": true
                },
                "prism_visualization": {
                    "type": "boolean",
                    "title": "Nutanix Prism Network Visualization for AHV",
                    "description": "Indicates whether Nutanix Prism's Network Visualization will be populated when the Acropolis Hypervisor is used. This data is also used to aid in automated VLAN Provisioning.",
                    "default": false
                },
                "vlan_provisioning": {
                    "type": "boolean",
                    "title": "VLAN Provisioning for AHV",
                    "description": "Indicates whether VLAN's will be automatically provisioned in Plexxi Control when the Acropolis Hypervisor is used",
                    "default": false
                }
            },
            "additionalProperties": false,
            "required": [
                "host",
                "username",
                "password",
                "verify_ssl",
                "enabled",
                "fitting",
                "control_visualization",
                "prism_visualization",
                "vlan_provisioning"
            ]
        },
        "nutanix_pack_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "title": "Configuration",
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "Host",
                                    "description": "Hostname or IP address of Nutanix Prism"
                                },
                                "username": {
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "Username"
                                },
                                "verify_ssl": {
                                    "type": "boolean",
                                    "title": "Verify SSL",
                                    "description": "Indicates whether SSL/TLS certificates should be validated when connecting to Nutanix Prism"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Indicates whether this configuration should be enabled",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 200
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "maxLength": 1000
                                },
                                "fitting": {
                                    "type": "boolean",
                                    "title": "CVM Fitting",
                                    "description": "Indicates if CVM network traffic will be affinitized",
                                    "default": false
                                },
                                "control_visualization": {
                                    "type": "boolean",
                                    "title": "Plexxi Control Network Visualization for AHV",
                                    "description": "Indicates whether Plexxi Control's Network Visualization will be populated when the Acropolis Hypervisor is used",
                                    "default": true
                                },
                                "prism_visualization": {
                                    "type": "boolean",
                                    "title": "Nutanix Prism Network Visualization for AHV",
                                    "description": "Indicates whether Nutanix Prism's Network Visualization will be populated when the Acropolis Hypervisor is used. This data is also used to aid in automated VLAN Provisioning.",
                                    "default": false
                                },
                                "vlan_provisioning": {
                                    "type": "boolean",
                                    "title": "VLAN Provisioning for AHV",
                                    "description": "Indicates whether VLAN's will be automatically provisioned in Plexxi Control when the Acropolis Hypervisor is used",
                                    "default": false
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "host",
                                "username",
                                "password",
                                "verify_ssl",
                                "enabled",
                                "fitting",
                                "control_visualization",
                                "prism_visualization",
                                "vlan_provisioning"
                            ]
                        }
                    }
                }
            ]
        },
        "nutanix_pack_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "title": "Configuration",
                                "type": "object",
                                "properties": {
                                    "host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "Host",
                                        "description": "Hostname or IP address of Nutanix Prism"
                                    },
                                    "username": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "Username"
                                    },
                                    "verify_ssl": {
                                        "type": "boolean",
                                        "title": "Verify SSL",
                                        "description": "Indicates whether SSL/TLS certificates should be validated when connecting to Nutanix Prism"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Indicates whether this configuration should be enabled",
                                        "default": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "maxLength": 200
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "maxLength": 1000
                                    },
                                    "fitting": {
                                        "type": "boolean",
                                        "title": "CVM Fitting",
                                        "description": "Indicates if CVM network traffic will be affinitized",
                                        "default": false
                                    },
                                    "control_visualization": {
                                        "type": "boolean",
                                        "title": "Plexxi Control Network Visualization for AHV",
                                        "description": "Indicates whether Plexxi Control's Network Visualization will be populated when the Acropolis Hypervisor is used",
                                        "default": true
                                    },
                                    "prism_visualization": {
                                        "type": "boolean",
                                        "title": "Nutanix Prism Network Visualization for AHV",
                                        "description": "Indicates whether Nutanix Prism's Network Visualization will be populated when the Acropolis Hypervisor is used. This data is also used to aid in automated VLAN Provisioning.",
                                        "default": false
                                    },
                                    "vlan_provisioning": {
                                        "type": "boolean",
                                        "title": "VLAN Provisioning for AHV",
                                        "description": "Indicates whether VLAN's will be automatically provisioned in Plexxi Control when the Acropolis Hypervisor is used",
                                        "default": false
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "host",
                                    "username",
                                    "password",
                                    "verify_ssl",
                                    "enabled",
                                    "fitting",
                                    "control_visualization",
                                    "prism_visualization",
                                    "vlan_provisioning"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "plexxi_pack": {
            "title": "Configuration",
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "format": "hostname",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Host",
                    "description": "Hostname or IP address of Plexxi Control"
                },
                "username": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Username"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Password"
                },
                "verify_ssl": {
                    "type": "boolean",
                    "title": "Verify SSL",
                    "description": "Indicates whether SSL/TLS certificates should be validated when connecting to Plexxi Control"
                },
                "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Indicates whether this configuration should be enabled",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "title": "Name",
                    "maxLength": 200
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "maxLength": 1000
                },
                "vlan_range": {
                    "type": "string",
                    "format": "vlan-range",
                    "title": "VLAN Range",
                    "description": "No actions will be taken on VLANs outside this range. If blank, all Plexxi supported VLANs (1-4000) will be managed by Plexxi Connect.",
                    "default": "1-4000"
                },
                "snmp_community_name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "SNMP Community Name",
                    "description": "SNMP Community Name",
                    "default": "public"
                },
                "snmp_contact": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "SNMP Contact",
                    "description": "Indicates who to contact.",
                    "default": "support@plexxi.com"
                },
                "snmp_switch_location": {
                    "type": "string",
                    "title": "Switch Location",
                    "description": "Indicates the location of the Plexxi Switches. Used by SNMP.",
                    "default": ""
                }
            },
            "additionalProperties": false,
            "required": [
                "host",
                "username",
                "password",
                "verify_ssl",
                "enabled"
            ]
        },
        "plexxi_pack_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "title": "Configuration",
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "Host",
                                    "description": "Hostname or IP address of Plexxi Control"
                                },
                                "username": {
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "Username"
                                },
                                "verify_ssl": {
                                    "type": "boolean",
                                    "title": "Verify SSL",
                                    "description": "Indicates whether SSL/TLS certificates should be validated when connecting to Plexxi Control"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Indicates whether this configuration should be enabled",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 200
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "maxLength": 1000
                                },
                                "vlan_range": {
                                    "type": "string",
                                    "format": "vlan-range",
                                    "title": "VLAN Range",
                                    "description": "No actions will be taken on VLANs outside this range. If blank, all Plexxi supported VLANs (1-4000) will be managed by Plexxi Connect.",
                                    "default": "1-4000"
                                },
                                "snmp_community_name": {
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "SNMP Community Name",
                                    "description": "SNMP Community Name",
                                    "default": "public"
                                },
                                "snmp_contact": {
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "SNMP Contact",
                                    "description": "Indicates who to contact.",
                                    "default": "support@plexxi.com"
                                },
                                "snmp_switch_location": {
                                    "type": "string",
                                    "title": "Switch Location",
                                    "description": "Indicates the location of the Plexxi Switches. Used by SNMP.",
                                    "default": ""
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "host",
                                "username",
                                "password",
                                "verify_ssl",
                                "enabled"
                            ]
                        }
                    }
                }
            ]
        },
        "plexxi_pack_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "title": "Configuration",
                                "type": "object",
                                "properties": {
                                    "host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "Host",
                                        "description": "Hostname or IP address of Plexxi Control"
                                    },
                                    "username": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "Username"
                                    },
                                    "verify_ssl": {
                                        "type": "boolean",
                                        "title": "Verify SSL",
                                        "description": "Indicates whether SSL/TLS certificates should be validated when connecting to Plexxi Control"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Indicates whether this configuration should be enabled",
                                        "default": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "maxLength": 200
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "maxLength": 1000
                                    },
                                    "vlan_range": {
                                        "type": "string",
                                        "format": "vlan-range",
                                        "title": "VLAN Range",
                                        "description": "No actions will be taken on VLANs outside this range. If blank, all Plexxi supported VLANs (1-4000) will be managed by Plexxi Connect.",
                                        "default": "1-4000"
                                    },
                                    "snmp_community_name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "SNMP Community Name",
                                        "description": "SNMP Community Name",
                                        "default": "public"
                                    },
                                    "snmp_contact": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "SNMP Contact",
                                        "description": "Indicates who to contact.",
                                        "default": "support@plexxi.com"
                                    },
                                    "snmp_switch_location": {
                                        "type": "string",
                                        "title": "Switch Location",
                                        "description": "Indicates the location of the Plexxi Switches. Used by SNMP.",
                                        "default": ""
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "host",
                                    "username",
                                    "password",
                                    "verify_ssl",
                                    "enabled"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "vsphere_pack": {
            "title": "Configuration",
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "format": "hostname",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Host",
                    "description": "Hostname or IP address of vSphere"
                },
                "username": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Username"
                },
                "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 3,
                    "maxLength": 200,
                    "title": "Password"
                },
                "verify_ssl": {
                    "type": "boolean",
                    "title": "Verify SSL",
                    "description": "Indicates whether SSL/TLS certificates should be validated when connecting to vSphere"
                },
                "enabled": {
                    "type": "boolean",
                    "title": "Enabled",
                    "description": "Indicates whether this configuration should be enabled",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "title": "Name",
                    "maxLength": 200
                },
                "description": {
                    "type": "string",
                    "title": "Description",
                    "maxLength": 1000
                },
                "auto_discovery": {
                    "type": "boolean",
                    "title": "Auto-enable Discovery Protocols",
                    "description": "Indicates whether LLDP/Advertise should be enabled on all Distributed vSwitches and CDP/Advertise should be enabled on all Standard vSwitches",
                    "default": false
                },
                "use_cdp": {
                    "type": "boolean",
                    "title": "Use CDP",
                    "description": "Indicates whether CDP should be used instead of LLDP as the Discovery Protocol for Distributed vSwitches",
                    "default": false
                },
                "control_visualization": {
                    "type": "boolean",
                    "title": "Plexxi Control Network Visualization",
                    "description": "Indicates whether Plexxi Control's Network Visualization will be populated",
                    "default": true
                },
                "lag_provisioning": {
                    "type": "boolean",
                    "title": "LAG Provisioning",
                    "description": "Indicates whether Link Aggregation Groups will be automatically provisioned in Plexxi Control based on the corresponding vSwitch configurations",
                    "default": false
                },
                "vlan_provisioning": {
                    "type": "boolean",
                    "title": "VLAN Provisioning",
                    "description": "Indicates whether VLAN's will be automatically provisioned in Plexxi Control",
                    "default": false
                }
            },
            "additionalProperties": false,
            "required": [
                "host",
                "username",
                "password",
                "verify_ssl",
                "enabled",
                "auto_discovery",
                "use_cdp",
                "control_visualization",
                "lag_provisioning",
                "vlan_provisioning"
            ]
        },
        "vsphere_pack_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "title": "Configuration",
                            "type": "object",
                            "properties": {
                                "host": {
                                    "type": "string",
                                    "format": "hostname",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "Host",
                                    "description": "Hostname or IP address of vSphere"
                                },
                                "username": {
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 200,
                                    "title": "Username"
                                },
                                "verify_ssl": {
                                    "type": "boolean",
                                    "title": "Verify SSL",
                                    "description": "Indicates whether SSL/TLS certificates should be validated when connecting to vSphere"
                                },
                                "enabled": {
                                    "type": "boolean",
                                    "title": "Enabled",
                                    "description": "Indicates whether this configuration should be enabled",
                                    "default": true
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "maxLength": 200
                                },
                                "description": {
                                    "type": "string",
                                    "title": "Description",
                                    "maxLength": 1000
                                },
                                "auto_discovery": {
                                    "type": "boolean",
                                    "title": "Auto-enable Discovery Protocols",
                                    "description": "Indicates whether LLDP/Advertise should be enabled on all Distributed vSwitches and CDP/Advertise should be enabled on all Standard vSwitches",
                                    "default": false
                                },
                                "use_cdp": {
                                    "type": "boolean",
                                    "title": "Use CDP",
                                    "description": "Indicates whether CDP should be used instead of LLDP as the Discovery Protocol for Distributed vSwitches",
                                    "default": false
                                },
                                "control_visualization": {
                                    "type": "boolean",
                                    "title": "Plexxi Control Network Visualization",
                                    "description": "Indicates whether Plexxi Control's Network Visualization will be populated",
                                    "default": true
                                },
                                "lag_provisioning": {
                                    "type": "boolean",
                                    "title": "LAG Provisioning",
                                    "description": "Indicates whether Link Aggregation Groups will be automatically provisioned in Plexxi Control based on the corresponding vSwitch configurations",
                                    "default": false
                                },
                                "vlan_provisioning": {
                                    "type": "boolean",
                                    "title": "VLAN Provisioning",
                                    "description": "Indicates whether VLAN's will be automatically provisioned in Plexxi Control",
                                    "default": false
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "host",
                                "username",
                                "password",
                                "verify_ssl",
                                "enabled",
                                "auto_discovery",
                                "use_cdp",
                                "control_visualization",
                                "lag_provisioning",
                                "vlan_provisioning"
                            ]
                        }
                    }
                }
            ]
        },
        "vsphere_pack_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "title": "Configuration",
                                "type": "object",
                                "properties": {
                                    "host": {
                                        "type": "string",
                                        "format": "hostname",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "Host",
                                        "description": "Hostname or IP address of vSphere"
                                    },
                                    "username": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 200,
                                        "title": "Username"
                                    },
                                    "verify_ssl": {
                                        "type": "boolean",
                                        "title": "Verify SSL",
                                        "description": "Indicates whether SSL/TLS certificates should be validated when connecting to vSphere"
                                    },
                                    "enabled": {
                                        "type": "boolean",
                                        "title": "Enabled",
                                        "description": "Indicates whether this configuration should be enabled",
                                        "default": true
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "maxLength": 200
                                    },
                                    "description": {
                                        "type": "string",
                                        "title": "Description",
                                        "maxLength": 1000
                                    },
                                    "auto_discovery": {
                                        "type": "boolean",
                                        "title": "Auto-enable Discovery Protocols",
                                        "description": "Indicates whether LLDP/Advertise should be enabled on all Distributed vSwitches and CDP/Advertise should be enabled on all Standard vSwitches",
                                        "default": false
                                    },
                                    "use_cdp": {
                                        "type": "boolean",
                                        "title": "Use CDP",
                                        "description": "Indicates whether CDP should be used instead of LLDP as the Discovery Protocol for Distributed vSwitches",
                                        "default": false
                                    },
                                    "control_visualization": {
                                        "type": "boolean",
                                        "title": "Plexxi Control Network Visualization",
                                        "description": "Indicates whether Plexxi Control's Network Visualization will be populated",
                                        "default": true
                                    },
                                    "lag_provisioning": {
                                        "type": "boolean",
                                        "title": "LAG Provisioning",
                                        "description": "Indicates whether Link Aggregation Groups will be automatically provisioned in Plexxi Control based on the corresponding vSwitch configurations",
                                        "default": false
                                    },
                                    "vlan_provisioning": {
                                        "type": "boolean",
                                        "title": "VLAN Provisioning",
                                        "description": "Indicates whether VLAN's will be automatically provisioned in Plexxi Control",
                                        "default": false
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "host",
                                    "username",
                                    "password",
                                    "verify_ssl",
                                    "enabled",
                                    "auto_discovery",
                                    "use_cdp",
                                    "control_visualization",
                                    "lag_provisioning",
                                    "vlan_provisioning"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "affinity_groups_plexxi_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "title": "Affinity Group",
                            "properties": {
                                "foreign_id": {
                                    "type": "string",
                                    "title": "Foreign ID",
                                    "example": "000535c8-fab0-725a-4af0-141877703f5f"
                                },
                                "foreign_uuid": {
                                    "type": "string",
                                    "title": "Foreign UUID",
                                    "example": "000535c8-fab0-725a-4af0-141877703f5f-AG"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "example": "AffinityGroup1"
                                },
                                "elements": {
                                    "type": "string",
                                    "title": "Elements",
                                    "example": [
                                        "03734100030200000000000000000001",
                                        "03734100030200000000000000000002"
                                    ]
                                },
                                "uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "UUID",
                                    "example": "0373410004280000399e081dc0ca985b"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name",
                                "uuid"
                            ]
                        }
                    }
                }
            ]
        },
        "affinity_groups_plexxi_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Affinity Group",
                                "properties": {
                                    "foreign_id": {
                                        "type": "string",
                                        "title": "Foreign ID",
                                        "example": "000535c8-fab0-725a-4af0-141877703f5f"
                                    },
                                    "foreign_uuid": {
                                        "type": "string",
                                        "title": "Foreign UUID",
                                        "example": "000535c8-fab0-725a-4af0-141877703f5f-AG"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "example": "AffinityGroup1"
                                    },
                                    "elements": {
                                        "type": "string",
                                        "title": "Elements",
                                        "example": [
                                            "03734100030200000000000000000001",
                                            "03734100030200000000000000000002"
                                        ]
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "UUID",
                                        "example": "0373410004280000399e081dc0ca985b"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "name",
                                    "uuid"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "affinity_links_plexxi_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "title": "Affinity Link",
                            "properties": {
                                "foreign_id": {
                                    "type": "string",
                                    "title": "Foreign ID",
                                    "example": "000535c8-fab0-725a-4af0-141877703f5f"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "example": "AffinityLink1"
                                },
                                "affinity_groups": {
                                    "type": "string",
                                    "title": "Affinity Groups",
                                    "example": [
                                        "03734100042800000000000000000001",
                                        "03734100042800000000000000000002"
                                    ]
                                },
                                "uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "UUID",
                                    "example": "0373410004280000399e081dc0ca985b"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name",
                                "uuid"
                            ]
                        }
                    }
                }
            ]
        },
        "affinity_links_plexxi_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Affinity Link",
                                "properties": {
                                    "foreign_id": {
                                        "type": "string",
                                        "title": "Foreign ID",
                                        "example": "000535c8-fab0-725a-4af0-141877703f5f"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "example": "AffinityLink1"
                                    },
                                    "affinity_groups": {
                                        "type": "string",
                                        "title": "Affinity Groups",
                                        "example": [
                                            "03734100042800000000000000000001",
                                            "03734100042800000000000000000002"
                                        ]
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "UUID",
                                        "example": "0373410004280000399e081dc0ca985b"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "name",
                                    "uuid"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "fabrics_plexxi_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "title": "Fabric",
                            "properties": {
                                "alarm_count": {
                                    "type": "number",
                                    "title": "Alarm Count",
                                    "example": 1
                                },
                                "is_stable": {
                                    "type": "boolean",
                                    "title": "Stable",
                                    "example": true
                                },
                                "is_whole": {
                                    "type": "boolean",
                                    "title": "Whole",
                                    "example": true
                                },
                                "last_modified": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "example": "2016-02-29T15:07:36.060204+00:00"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "example": "plexxi-fabric-01"
                                },
                                "uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "UUID",
                                    "example": "03734100041a0000399e081dc0ca985b"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "alarm_count",
                                "is_stable",
                                "is_whole",
                                "last_modified",
                                "name",
                                "uuid"
                            ]
                        }
                    }
                }
            ]
        },
        "fabrics_plexxi_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Fabric",
                                "properties": {
                                    "alarm_count": {
                                        "type": "number",
                                        "title": "Alarm Count",
                                        "example": 1
                                    },
                                    "is_stable": {
                                        "type": "boolean",
                                        "title": "Stable",
                                        "example": true
                                    },
                                    "is_whole": {
                                        "type": "boolean",
                                        "title": "Whole",
                                        "example": true
                                    },
                                    "last_modified": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "example": "2016-02-29T15:07:36.060204+00:00"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "example": "plexxi-fabric-01"
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "UUID",
                                        "example": "03734100041a0000399e081dc0ca985b"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "alarm_count",
                                    "is_stable",
                                    "is_whole",
                                    "last_modified",
                                    "name",
                                    "uuid"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "fitting_results_plexxi_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "title": "Fitting Result",
                            "properties": {
                                "date": {
                                    "type": "string",
                                    "title": "Fitting Date",
                                    "example": "2016-02-29T15:07:36.060204Z"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "example": "Fit Nov 21, 2016, 9:50:09 AM"
                                },
                                "residual_flow_map": {
                                    "type": "object",
                                    "title": "Residual Flow Map",
                                    "example": "{}"
                                },
                                "state": {
                                    "type": "string",
                                    "title": "State",
                                    "enum": [
                                        "applied"
                                    ]
                                },
                                "uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "UUID",
                                    "example": "0373410004280000399e081dc0ca985b"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name",
                                "uuid"
                            ]
                        }
                    }
                }
            ]
        },
        "fitting_results_plexxi_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Fitting Result",
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "title": "Fitting Date",
                                        "example": "2016-02-29T15:07:36.060204Z"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "example": "Fit Nov 21, 2016, 9:50:09 AM"
                                    },
                                    "residual_flow_map": {
                                        "type": "object",
                                        "title": "Residual Flow Map",
                                        "example": "{}"
                                    },
                                    "state": {
                                        "type": "string",
                                        "title": "State",
                                        "enum": [
                                            "applied"
                                        ]
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "UUID",
                                        "example": "0373410004280000399e081dc0ca985b"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "name",
                                    "uuid"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "ports_plexxi_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "title": "Port",
                            "properties": {
                                "access_port": {
                                    "type": "boolean",
                                    "title": "Access Port",
                                    "example": true
                                },
                                "admin_state_enabled": {
                                    "type": "boolean",
                                    "title": "Admin State Enabled",
                                    "example": true
                                },
                                "identifier": {
                                    "type": "number",
                                    "title": "Port Number",
                                    "example": 41
                                },
                                "last_modified": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "example": "2016-02-29T15:07:36.060204+00:00"
                                },
                                "line_speed": {
                                    "type": "number",
                                    "title": "Line Speed",
                                    "example": 1000
                                },
                                "link_down": {
                                    "type": "boolean",
                                    "title": "Link Down",
                                    "example": false
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "example": "SwitchFabricPort#41"
                                },
                                "qsfp_mode": {
                                    "type": "string",
                                    "title": "QSFP Mode",
                                    "example": "SWITCH_1x_QSFP_1x40_GBPS"
                                },
                                "switch_uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "Switch UUID",
                                    "example": "0373410004190000399e081dc0ca985b"
                                },
                                "uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "UUID",
                                    "example": "03734100040c0000399e081dc0ca985b"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "access_port",
                                "admin_state_enabled",
                                "identifier",
                                "last_modified",
                                "line_speed",
                                "link_down",
                                "name",
                                "qsfp_mode",
                                "switch_uuid",
                                "uuid"
                            ]
                        }
                    }
                }
            ]
        },
        "ports_plexxi_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Port",
                                "properties": {
                                    "access_port": {
                                        "type": "boolean",
                                        "title": "Access Port",
                                        "example": true
                                    },
                                    "admin_state_enabled": {
                                        "type": "boolean",
                                        "title": "Admin State Enabled",
                                        "example": true
                                    },
                                    "identifier": {
                                        "type": "number",
                                        "title": "Port Number",
                                        "example": 41
                                    },
                                    "last_modified": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "example": "2016-02-29T15:07:36.060204+00:00"
                                    },
                                    "line_speed": {
                                        "type": "number",
                                        "title": "Line Speed",
                                        "example": 1000
                                    },
                                    "link_down": {
                                        "type": "boolean",
                                        "title": "Link Down",
                                        "example": false
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "example": "SwitchFabricPort#41"
                                    },
                                    "qsfp_mode": {
                                        "type": "string",
                                        "title": "QSFP Mode",
                                        "example": "SWITCH_1x_QSFP_1x40_GBPS"
                                    },
                                    "switch_uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "Switch UUID",
                                        "example": "0373410004190000399e081dc0ca985b"
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "UUID",
                                        "example": "03734100040c0000399e081dc0ca985b"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "access_port",
                                    "admin_state_enabled",
                                    "identifier",
                                    "last_modified",
                                    "line_speed",
                                    "link_down",
                                    "name",
                                    "qsfp_mode",
                                    "switch_uuid",
                                    "uuid"
                                ]
                            }
                        }
                    }
                }
            ]
        },
        "switches_plexxi_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "object",
                            "title": "Switch",
                            "properties": {
                                "alarms": {
                                    "type": "number",
                                    "title": "Alarm Count",
                                    "example": 1
                                },
                                "fabric_uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "Fabric UUID",
                                    "example": "03734100041a0000399e081dc0ca985b"
                                },
                                "hw_revision": {
                                    "type": "string",
                                    "title": "Hardware Revision",
                                    "example": "SM2"
                                },
                                "ip_address": {
                                    "type": "string",
                                    "title": "IP Address",
                                    "minLength": 7,
                                    "maxLength": 15,
                                    "example": "10.1.1.1"
                                },
                                "last_modified": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "example": "2016-02-29T15:07:36.060204+00:00"
                                },
                                "mac": {
                                    "type": "string",
                                    "title": "MAC Address",
                                    "minLength": 17,
                                    "maxLength": 17,
                                    "example": "E0:39:D7:00:00:00"
                                },
                                "model": {
                                    "type": "string",
                                    "title": "Model",
                                    "example": "SWITCH_1X"
                                },
                                "name": {
                                    "type": "string",
                                    "title": "Name",
                                    "example": "plexxi-switch-01"
                                },
                                "operational_stage": {
                                    "type": "string",
                                    "title": "Operational Stage",
                                    "example": "S3P"
                                },
                                "status": {
                                    "type": "string",
                                    "title": "Status",
                                    "example": "HEALTHY"
                                },
                                "sw_version": {
                                    "type": "string",
                                    "title": "Software Version",
                                    "example": "2.2.0"
                                },
                                "uuid": {
                                    "type": "string",
                                    "minLength": 32,
                                    "maxLength": 32,
                                    "title": "UUID",
                                    "example": "0373410004190000399e081dc0ca985b"
                                },
                                "cdp_enable_mode": {
                                    "type": "string",
                                    "title": "CDP Enable Mode",
                                    "example": "RX_ONLY"
                                },
                                "lldp_enable_mode": {
                                    "type": "string",
                                    "title": "LLDP Enable Mode",
                                    "example": "RX_ONLY"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "alarms",
                                "fabric_uuid",
                                "hw_revision",
                                "ip_address",
                                "last_modified",
                                "mac",
                                "model",
                                "name",
                                "operational_stage",
                                "status",
                                "sw_version",
                                "uuid",
                                "cdp_enable_mode",
                                "lldp_enable_mode"
                            ]
                        }
                    }
                }
            ]
        },
        "switches_plexxi_list_response": {
            "allOf": [
                {
                    "$ref": "#/definitions/Response"
                },
                {
                    "properties": {
                        "result": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "title": "Switch",
                                "properties": {
                                    "alarms": {
                                        "type": "number",
                                        "title": "Alarm Count",
                                        "example": 1
                                    },
                                    "fabric_uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "Fabric UUID",
                                        "example": "03734100041a0000399e081dc0ca985b"
                                    },
                                    "hw_revision": {
                                        "type": "string",
                                        "title": "Hardware Revision",
                                        "example": "SM2"
                                    },
                                    "ip_address": {
                                        "type": "string",
                                        "title": "IP Address",
                                        "minLength": 7,
                                        "maxLength": 15,
                                        "example": "10.1.1.1"
                                    },
                                    "last_modified": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "example": "2016-02-29T15:07:36.060204+00:00"
                                    },
                                    "mac": {
                                        "type": "string",
                                        "title": "MAC Address",
                                        "minLength": 17,
                                        "maxLength": 17,
                                        "example": "E0:39:D7:00:00:00"
                                    },
                                    "model": {
                                        "type": "string",
                                        "title": "Model",
                                        "example": "SWITCH_1X"
                                    },
                                    "name": {
                                        "type": "string",
                                        "title": "Name",
                                        "example": "plexxi-switch-01"
                                    },
                                    "operational_stage": {
                                        "type": "string",
                                        "title": "Operational Stage",
                                        "example": "S3P"
                                    },
                                    "status": {
                                        "type": "string",
                                        "title": "Status",
                                        "example": "HEALTHY"
                                    },
                                    "sw_version": {
                                        "type": "string",
                                        "title": "Software Version",
                                        "example": "2.2.0"
                                    },
                                    "uuid": {
                                        "type": "string",
                                        "minLength": 32,
                                        "maxLength": 32,
                                        "title": "UUID",
                                        "example": "0373410004190000399e081dc0ca985b"
                                    },
                                    "cdp_enable_mode": {
                                        "type": "string",
                                        "title": "CDP Enable Mode",
                                        "example": "RX_ONLY"
                                    },
                                    "lldp_enable_mode": {
                                        "type": "string",
                                        "title": "LLDP Enable Mode",
                                        "example": "RX_ONLY"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "alarms",
                                    "fabric_uuid",
                                    "hw_revision",
                                    "ip_address",
                                    "last_modified",
                                    "mac",
                                    "model",
                                    "name",
                                    "operational_stage",
                                    "status",
                                    "sw_version",
                                    "uuid",
                                    "cdp_enable_mode",
                                    "lldp_enable_mode"
                                ]
                            }
                        }
                    }
                }
            ]
        }
    }
}