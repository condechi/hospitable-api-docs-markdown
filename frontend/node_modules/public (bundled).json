{
  "openapi": "3.1.0",
  "info": {
    "version": "2.0",
    "title": "Hospitable API V2",
    "summary": "Send message for Inquiry",
    "description": "<!-- theme: warning -->"
  },
  "servers": [
    {
      "url": "https://public.api.hospitable.com/v2",
      "description": "Production"
    }
  ],
  "paths": {
    "/properties": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get Properties",
        "description": "<!-- theme: warning -->\n> 📘 Available includes:\n> \n> - user\n> - listings (required: `listing:read` scope)\n> - details\n> - bookings",
        "operationId": "get-properties",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What relationships of the property should be included in the response.",
            "schema": {
              "const": "listings"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The number of results to include per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/PropertyFull"
                          }
                        ]
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/properties?page=1"
                          ]
                        },
                        "last": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/properties?page=2"
                          ]
                        },
                        "prev": {},
                        "next": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/properties?page=2"
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "from": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "last_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            2
                          ]
                        },
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {},
                              "label": {
                                "type": "string",
                                "examples": [
                                  "&laquo; Previous"
                                ]
                              },
                              "active": {
                                "type": "boolean",
                                "default": true,
                                "examples": [
                                  false
                                ]
                              }
                            }
                          }
                        },
                        "path": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/properties"
                          ]
                        },
                        "per_page": {
                          "type": "integer",
                          "maximum": 100,
                          "default": 10,
                          "examples": [
                            10
                          ]
                        },
                        "to": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            10
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            15
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "integer",
                      "default": 0,
                      "examples": [
                        400
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "Invalid pagination parameter supplied."
                      ]
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "status_code": 400,
                      "reason_phrase": "Invalid pagination parameter supplied."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500",
                  "__errors__": {
                    "#/components/schemas/500": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/properties/search": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Search Properties",
        "description": "<!-- theme: warning -->\n>This endpoint allows you to search up to **3 years **in the future and for a max period of** 90 days**.\n\n> 📘 Available includes:\n> \n> - listings (required: `listing:read` scope)\n> - details\n\n> Requires the customer to have a Self-hosted site created in Direct, with the properties scoped.",
        "operationId": "search-properties",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What relationships of the property should be included in the response.",
            "schema": {
              "const": "listings"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "examples": [
                "2024-08-16"
              ]
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "examples": [
                "2024-10-21"
              ]
            }
          },
          {
            "name": "adults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "children",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "infants",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pets",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "location",
            "in": "query",
            "style": "deepObject",
            "schema": {
              "type": "object",
              "properties": {
                "latitude": {
                  "type": "number",
                  "format": "float"
                },
                "longitude": {
                  "type": "number",
                  "format": "float"
                }
              },
              "required": [
                "latitude",
                "longitude"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "property": {
                            "allOf": [
                              {
                                "$ref": "#/components/schemas/Property"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "details": {
                                    "$ref": "#/components/schemas/Property_details"
                                  }
                                }
                              }
                            ]
                          },
                          "pricing": {
                            "type": "object",
                            "properties": {
                              "daily": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "date": {
                                      "type": "string",
                                      "examples": [
                                        "2019-01-02"
                                      ]
                                    },
                                    "price": {
                                      "type": "object",
                                      "properties": {
                                        "currency": {
                                          "type": "string",
                                          "examples": [
                                            "USD"
                                          ]
                                        },
                                        "amount": {
                                          "type": "integer",
                                          "default": 0,
                                          "examples": [
                                            9800
                                          ]
                                        },
                                        "formatted_string": {
                                          "type": "string",
                                          "examples": [
                                            "$98.00"
                                          ]
                                        },
                                        "formatted_decimal": {
                                          "type": "string",
                                          "examples": [
                                            "98.00"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "total_without_taxes": {
                                "type": "object",
                                "properties": {
                                  "currency": {
                                    "type": "string",
                                    "examples": [
                                      "USD"
                                    ]
                                  },
                                  "amount": {
                                    "type": "integer",
                                    "default": 0,
                                    "examples": [
                                      9800
                                    ]
                                  },
                                  "formatted_string": {
                                    "type": "string",
                                    "examples": [
                                      "$98.00"
                                    ]
                                  },
                                  "formatted_decimal": {
                                    "type": "string",
                                    "examples": [
                                      "98.00"
                                    ]
                                  }
                                }
                              },
                              "total": {}
                            }
                          },
                          "availability": {
                            "type": "object",
                            "properties": {
                              "available": {
                                "type": "boolean",
                                "default": true,
                                "examples": [
                                  false
                                ]
                              },
                              "details": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "notAvailableReason": {
                                      "type": "string",
                                      "examples": [
                                        "maximum_number_of_guests_exceeded"
                                      ]
                                    },
                                    "date": {
                                      "type": "string",
                                      "examples": [
                                        "2019-01-02T00:00:00.000000Z"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "distance_in_km": {
                            "type": "integer",
                            "default": 0,
                            "examples": [
                              10
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "integer",
                      "default": 0,
                      "examples": [
                        400
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "Invalid pagination parameter supplied."
                      ]
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "status_code": 400,
                      "reason_phrase": "Invalid pagination parameter supplied."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500",
                  "__errors__": {
                    "#/components/schemas/500": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/properties/{uuid}": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get Property by UUID",
        "description": "<!-- theme: warning -->\n> 📘 Available includes:\n> - user\n> - listings (required: `listing:read` scope)\n> - details\n> - bookings",
        "operationId": "get-property",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "What relationships of the property should be included in the response.",
            "schema": {
              "const": "listings"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the property to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PropertyFull"
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500",
                  "__errors__": {
                    "#/components/schemas/500": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/properties/{uuid}/images": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get Property Images",
        "description": "<!-- theme: warning -->",
        "operationId": "get-property-images",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the property to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": "string",
                            "examples": [
                              "https://assets.hospitable.com/property_images/1234/ABC123.jpg"
                            ]
                          },
                          "thumbnail_url": {
                            "type": "string",
                            "examples": [
                              "https://assets.hospitable.com/property_images/1234/ABC123.jpg"
                            ]
                          },
                          "caption": {
                            "type": "string",
                            "examples": [
                              "Sample caption"
                            ]
                          },
                          "order": {
                            "type": "integer",
                            "default": 0,
                            "examples": [
                              1
                            ]
                          },
                          "last_updated_at": {
                            "type": "string",
                            "examples": [
                              "2023-05-15T00:00:00.000000Z"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "data": [
                        {
                          "url": "http://www.example.com/image-url",
                          "thumbnail_url": "http://example.com/thumbnail-url",
                          "caption": "Sample caption",
                          "order": 0,
                          "last_updated_at": "2023-05-15T00:00:00.000000Z"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500",
                  "__errors__": {
                    "#/components/schemas/500": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/properties/{uuid}/calendar": {
      "get": {
        "tags": [
          "Properties"
        ],
        "summary": "Get Property Calendar",
        "description": "<!-- theme: warning -->\n> 📘 Required scopes:\n> \n> - `property:read`\n> - `calendar:read`",
        "operationId": "get-property-calendar",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the property to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "listing_id": {
                          "type": "string",
                          "examples": [
                            "641292503357103111"
                          ],
                          "x-deprecated": true
                        },
                        "provider": {
                          "type": "string",
                          "x-deprecated": true
                        },
                        "start_date": {
                          "type": "string",
                          "examples": [
                            "2023-10-01"
                          ]
                        },
                        "end_date": {
                          "type": "string",
                          "examples": [
                            "2023-10-31"
                          ]
                        },
                        "days": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "examples": [
                                  "2023-10-01"
                                ]
                              },
                              "day": {
                                "type": "string",
                                "examples": [
                                  "SUNDAY"
                                ]
                              },
                              "min_stay": {
                                "type": "integer"
                              },
                              "status": {
                                "type": "object",
                                "properties": {
                                  "reason": {
                                    "type": "string",
                                    "enum": [
                                      "RESERVED",
                                      "AVAILABLE",
                                      "BLOCKED"
                                    ],
                                    "description": "`BLOCKED` is used for all other reasons a date is unavailable such as: the date is in the past, manually blocked, closed due to lead time settings, date is held for a request/invitation to book."
                                  },
                                  "source_type": {
                                    "description": "The source of the availability",
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "enum": [
                                          "USER",
                                          "VENDOR",
                                          "PLATFORM",
                                          "AVAILABILITY_WINDOW",
                                          "TURNOVER_DAY",
                                          "ADVANCED_NOTICE",
                                          "UPSELL",
                                          "RESERVATION"
                                        ]
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "source": {
                                    "description": "The source of the availability",
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "examples": [
                                          "Airbnb"
                                        ]
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "available": {
                                    "type": "boolean",
                                    "default": true,
                                    "examples": [
                                      false
                                    ]
                                  }
                                }
                              },
                              "price": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "default": 0,
                                    "examples": [
                                      15000
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "examples": [
                                      "EUR"
                                    ]
                                  },
                                  "formatted": {
                                    "type": "string",
                                    "examples": [
                                      "€150.00"
                                    ]
                                  }
                                }
                              },
                              "closed_for_checkin": {
                                "type": "boolean"
                              },
                              "closed_for_checkout": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500",
                  "__errors__": {
                    "#/components/schemas/500": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      },
      "put": {
        "tags": [
          "Properties"
        ],
        "summary": "Update Property Calendar",
        "description": "<!-- theme: warning -->\n> 📘 Required scopes:\n> \n> - `property:read`\n> - `calendar:write`",
        "operationId": "update-property-calendar",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the property to retrieve.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "date": {
                          "type": "string",
                          "description": "YYYY-MM-DD format",
                          "format": "date"
                        },
                        "price": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "description": "Amount in base units (e.g. cents for USD or EUR)",
                              "format": "int32",
                              "examples": [
                                1000
                              ]
                            }
                          }
                        },
                        "available": {
                          "type": "boolean",
                          "description": "Is this date available?"
                        },
                        "min_stay": {
                          "type": "integer",
                          "description": "Minimum nights stay",
                          "format": "int32",
                          "examples": [
                            3
                          ]
                        },
                        "closed_for_checkout": {
                          "type": "boolean",
                          "description": "Is the date available for checkout?"
                        },
                        "closed_for_checkin": {
                          "type": "boolean",
                          "description": "Is the date available for checkout?"
                        }
                      },
                      "maxProperties": 60
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "202",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "examples": [
                        "accepted"
                      ]
                    }
                  }
                },
                "examples": {
                  "Result": {
                    "value": {
                      "status": "accepted"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string",
                      "examples": [
                        "422"
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "This property has a channel that is calendar restricted, and updates can not be made to the calendar"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500",
                  "__errors__": {
                    "#/components/schemas/500": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/properties/{uuid}/quote": {
      "post": {
        "tags": [
          "Properties"
        ],
        "summary": "Generate a quote",
        "description": "<!-- theme: warning -->\n> 📘 **Scopes required**:\n> - quote:write\n\nThis endpoint will allow you to generate a quote for a Direct property. The quote includes all the financials and a link to our booking flow allowing you to redirect the user to complete the booking.",
        "operationId": "create-quote",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the property to get a quote for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "checkin_date": {
                    "type": "string",
                    "format": "date",
                    "examples": [
                      "2023-10-01"
                    ]
                  },
                  "checkout_date": {
                    "type": "string",
                    "format": "date",
                    "examples": [
                      "2023-10-01"
                    ]
                  },
                  "guests": {
                    "type": "object",
                    "properties": {
                      "adults": {
                        "type": "number",
                        "min": 1
                      },
                      "children": {
                        "type": "number",
                        "description": "number of children under 11",
                        "min": 0
                      },
                      "infants": {
                        "type": "number",
                        "description": "number of children under 3",
                        "min": 0
                      },
                      "pets": {
                        "type": "number",
                        "min": 0
                      }
                    },
                    "required": [
                      "adults"
                    ]
                  },
                  "guest_details": {
                    "type": "object",
                    "description": "The details of the primary guest",
                    "properties": {
                      "first_name": {
                        "type": "string",
                        "examples": [
                          "John Doe"
                        ]
                      },
                      "last_name": {
                        "type": "string",
                        "examples": [
                          "John Doe"
                        ]
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "examples": [
                          "john@guest.com"
                        ]
                      },
                      "phone": {
                        "type": "string",
                        "examples": [
                          "+12015550123"
                        ]
                      }
                    }
                  },
                  "promo_code": {
                    "type": "string",
                    "description": "A promo code to apply to the quote",
                    "examples": [
                      "DISCOUNT"
                    ]
                  }
                },
                "required": [
                  "checkin_date",
                  "checkout_date",
                  "guests"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "quote_id": {
                          "type": "string",
                          "format": "uuid",
                          "examples": [
                            "40c9b4fe-6594-4020-8593-886cb91ca35f"
                          ]
                        },
                        "booking_url": {
                          "type": "string",
                          "description": "The url to initiate the guest booking flow."
                        },
                        "currency": {
                          "type": "string",
                          "examples": [
                            "USD"
                          ]
                        },
                        "financials": {
                          "type": "object",
                          "properties": {
                            "taxes": {
                              "type": "array",
                              "description": "All the taxes applicable to the quote.",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/FinancialV2"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "type": "string",
                                        "examples": [
                                          "Lodging taxes"
                                        ]
                                      },
                                      "category": {
                                        "type": "string",
                                        "examples": [
                                          "Pass-through taxes"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "fees": {
                              "type": "array",
                              "description": "All the fees applicable to the quote.",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/FinancialV2"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "type": "string",
                                        "examples": [
                                          "Guest Service Fee"
                                        ]
                                      },
                                      "category": {
                                        "type": "string",
                                        "examples": [
                                          "Service fees"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "discounts": {
                              "type": "array",
                              "description": "Any discounts applicable to the quote.",
                              "items": {
                                "allOf": [
                                  {
                                    "$ref": "#/components/schemas/NegativeFinancial"
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "label": {
                                        "type": "string",
                                        "examples": [
                                          "Promo code (1234)"
                                        ]
                                      },
                                      "category": {
                                        "type": "string",
                                        "enum": [
                                          "Weekly Discount",
                                          "Monthly Discount",
                                          "Promotion Discount"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "totals": {
                              "type": "object",
                              "properties": {
                                "sub_total": {
                                  "type": "array",
                                  "description": "The total price of the quote. This is the accommodation + fees + taxes - discounts.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "examples": [
                                              "Sub Total"
                                            ]
                                          },
                                          "category": {
                                            "type": "string",
                                            "examples": [
                                              "Total payment"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/components/schemas/FinancialV2"
                                      }
                                    ]
                                  }
                                },
                                "total_fees": {
                                  "type": "array",
                                  "description": "The combined total price of the fees for the quote.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "examples": [
                                              "Total Fees"
                                            ]
                                          },
                                          "category": {
                                            "type": "string",
                                            "examples": [
                                              "Total payment"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/components/schemas/FinancialV2"
                                      }
                                    ]
                                  }
                                },
                                "total": {
                                  "type": "array",
                                  "description": "The total price of the quote. This is the accommodation + fees + taxes - discounts.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "examples": [
                                              "Total Price"
                                            ]
                                          },
                                          "category": {
                                            "type": "string",
                                            "examples": [
                                              "Guest total price"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/components/schemas/FinancialV2"
                                      }
                                    ]
                                  }
                                },
                                "total_without_taxes": {
                                  "type": "array",
                                  "description": "The total price of the quote without taxes. This is the accommodation + fees - discounts.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "label": {
                                            "type": "string",
                                            "examples": [
                                              "Total without taxes"
                                            ]
                                          },
                                          "category": {
                                            "type": "string",
                                            "examples": [
                                              "Total payment"
                                            ]
                                          }
                                        }
                                      },
                                      {
                                        "$ref": "#/components/schemas/FinancialV2"
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/500",
                  "__errors__": {
                    "#/components/schemas/500": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/properties/{uuid}/tags": {
      "post": {
        "tags": [
          "Properties"
        ],
        "summary": "Tag a property",
        "description": "<!-- theme: warning -->\n> 📘 **Scopes required**:\n> \n> This endpoint is for Personal Access Tokens only.",
        "operationId": "create-properties-tags",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the property.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "maxItems": 10,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "202",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404",
                  "__errors__": {
                    "#/components/schemas/404": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "5XX": {
            "description": "500",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string"
                    },
                    "reason_phrase": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/payouts": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "All Payouts",
        "description": "\n<!-- theme: warning -->\n> 🚧 **New Scope Required**\n> \n> For all Customers who **authorized access to their Airbnb before Jan 12th, 2024** in order to have access to `payouts` and `transactions` data you will have to re-connect their Channels. \n> \n> You can do it by guiding them through the [authorization flow](https://developer.hospitable.com/reference/authentication-3#oauth-authorization-for-vendors) again, same as the first time their account was connected.\n\n> 📘 **Scopes required**:\n> - transaction:read",
        "operationId": "all-payouts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: transactions",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "examples": [
                              "ed4783b9-4c78-36c0-a378-8a9b1ccb9e27"
                            ]
                          },
                          "platform": {
                            "type": "string",
                            "examples": [
                              "homeaway"
                            ]
                          },
                          "platform_id": {
                            "type": "string",
                            "examples": [
                              "ipsam"
                            ]
                          },
                          "bank_account": {
                            "type": "string",
                            "examples": [
                              "necessitatibus"
                            ]
                          },
                          "reference": {
                            "type": "string",
                            "examples": [
                              "quia"
                            ]
                          },
                          "amount": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "default": 0,
                                "examples": [
                                  80292743
                                ]
                              },
                              "formatted": {
                                "type": "string",
                                "examples": [
                                  "$802,927.43"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "examples": [
                                  "USD"
                                ]
                              }
                            }
                          },
                          "date": {}
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/payouts?page=1"
                          ]
                        },
                        "last": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/payouts?page=2"
                          ]
                        },
                        "prev": {},
                        "next": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/payouts?page=2"
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "from": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "last_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            2
                          ]
                        },
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {},
                              "label": {
                                "type": "string",
                                "examples": [
                                  "&laquo; Previous"
                                ]
                              },
                              "active": {
                                "type": "boolean",
                                "default": true,
                                "examples": [
                                  false
                                ]
                              }
                            }
                          }
                        },
                        "path": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/payouts"
                          ]
                        },
                        "per_page": {
                          "type": "integer",
                          "maximum": 100,
                          "default": 10,
                          "examples": [
                            2
                          ]
                        },
                        "to": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            2
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            3
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/payouts/{payout}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Retrieve a Payout",
        "description": "<!-- theme: warning -->\n> 🚧 **New Scope Required**\n> \n> For all Customers who **authorized access to their Airbnb before Jan 12th, 2024** in order to have access to `payouts` and `transactions` data you will have to re-connect their Channels. \n> \n> You can do it by guiding them through the [authorization flow](https://developer.hospitable.com/reference/authentication-3#oauth-authorization-for-vendors) again, same as the first time their account was connected.\n\n> 📘 **Scopes required**:\n> \n> - transaction:read",
        "operationId": "retrieve-a-payout",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: transactions",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payout",
            "in": "path",
            "description": "Payout UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "267e42ed-441c-3312-8145-6d3e7c0d0765"
                          ]
                        },
                        "platform": {
                          "type": "string",
                          "examples": [
                            "airbnb"
                          ]
                        },
                        "platform_id": {
                          "type": "string",
                          "examples": [
                            "ipsam"
                          ]
                        },
                        "bank_account": {
                          "type": "string",
                          "examples": [
                            "quam"
                          ]
                        },
                        "reference": {
                          "type": "string",
                          "examples": [
                            "inventore"
                          ]
                        },
                        "amount": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "default": 0,
                              "examples": [
                                12345
                              ]
                            },
                            "formatted": {
                              "type": "string",
                              "examples": [
                                "€123.45"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "examples": [
                                "EUR"
                              ]
                            }
                          }
                        },
                        "date": {},
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "examples": [
                                  "e99373f1-ec06-33f7-95da-5898df81effb"
                                ]
                              },
                              "platform": {
                                "type": "string",
                                "examples": [
                                  "airbnb"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "Payout"
                                ]
                              },
                              "details": {
                                "type": "string",
                                "examples": [
                                  "magni"
                                ]
                              },
                              "reference": {
                                "type": "string",
                                "examples": [
                                  "autem"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "examples": [
                                  "USD"
                                ]
                              },
                              "amount": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "default": 0,
                                    "examples": [
                                      351
                                    ]
                                  },
                                  "formatted": {
                                    "type": "string",
                                    "examples": [
                                      "$3.51"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "examples": [
                                      "USD"
                                    ]
                                  }
                                }
                              },
                              "paid_out_amount": {
                                "type": "object",
                                "properties": {
                                  "amount": {
                                    "type": "integer",
                                    "default": 0,
                                    "examples": [
                                      351
                                    ]
                                  },
                                  "formatted": {
                                    "type": "string",
                                    "examples": [
                                      "$3.51"
                                    ]
                                  },
                                  "currency": {
                                    "type": "string",
                                    "examples": [
                                      "USD"
                                    ]
                                  }
                                }
                              },
                              "date": {
                                "type": "string",
                                "examples": [
                                  "2019-01-01T12:00:00+00:00"
                                ]
                              },
                              "start_date": {
                                "type": "string",
                                "examples": [
                                  "2019-01-01T12:00:00+00:00"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "All Transactions",
        "description": "<!-- theme: warning -->\n> 🚧 **New Scope Required**\n> \n> For all Customers who **authorized access to their Airbnb before Jan 12th, 2024** in order to have access to `payouts` and `transactions` data you will have to re-connect their Channels. \n> \n> You can do it by guiding them through the [authorization flow](https://developer.hospitable.com/reference/authentication-3#oauth-authorization-for-vendors) again, same as the first time their account was connected.\n\n> 📘 **Scopes required**:\n> \n> - transaction:read",
        "operationId": "all-transactions",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: payout, reservation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "examples": [
                              "68b10831-6654-37c8-8cb5-314e05ece822"
                            ]
                          },
                          "platform": {
                            "type": "string",
                            "examples": [
                              "airbnb"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "Resolution Adjustment"
                            ]
                          },
                          "details": {
                            "type": "string",
                            "examples": [
                              "blanditiis"
                            ]
                          },
                          "reference": {
                            "type": "string",
                            "examples": [
                              "iure"
                            ]
                          },
                          "currency": {
                            "type": "string",
                            "examples": [
                              "USD"
                            ]
                          },
                          "amount": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "default": 0,
                                "examples": [
                                  9468
                                ]
                              },
                              "formatted": {
                                "type": "string",
                                "examples": [
                                  "$94.68"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "examples": [
                                  "USD"
                                ]
                              }
                            }
                          },
                          "paid_out_amount": {
                            "type": "object",
                            "properties": {
                              "amount": {
                                "type": "integer",
                                "default": 0,
                                "examples": [
                                  9468
                                ]
                              },
                              "formatted": {
                                "type": "string",
                                "examples": [
                                  "$94.68"
                                ]
                              },
                              "currency": {
                                "type": "string",
                                "examples": [
                                  "USD"
                                ]
                              }
                            }
                          },
                          "date": {
                            "type": "string",
                            "examples": [
                              "2019-01-01T12:00:00+00:00"
                            ]
                          },
                          "start_date": {
                            "type": "string",
                            "examples": [
                              "2019-01-01T12:00:00+00:00"
                            ]
                          }
                        }
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/transactions?page=1"
                          ]
                        },
                        "last": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/transactions?page=1"
                          ]
                        },
                        "prev": {},
                        "next": {}
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "from": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "last_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {},
                              "label": {
                                "type": "string",
                                "examples": [
                                  "&laquo; Previous"
                                ]
                              },
                              "active": {
                                "type": "boolean",
                                "default": true,
                                "examples": [
                                  false
                                ]
                              }
                            }
                          }
                        },
                        "path": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/transactions"
                          ]
                        },
                        "per_page": {
                          "type": "integer",
                          "maximum": 100,
                          "default": 10,
                          "examples": [
                            10
                          ]
                        },
                        "to": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            3
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            3
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/transactions/{transaction}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Retrieve a Transaction",
        "description": "<!-- theme: warning -->\n> 🚧 **New Scope Required**\n> \n> For all Customers who **authorized access to their Airbnb before Jan 12th, 2024** in order to have access to `payouts` and `transactions` data you will have to re-connect their Channels. \n> \n> You can do it by guiding them through the [authorization flow](https://developer.hospitable.com/reference/authentication-3#oauth-authorization-for-vendors) again, same as the first time their account was connected.\n\n> 📘 **Scopes required**:\n> \n> - transaction:read",
        "operationId": "retrieve-a-transaction",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: payout, reservation",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "transaction",
            "in": "path",
            "description": "Transaction UUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "15293323-7f17-3688-b305-63a98ba01384"
                          ]
                        },
                        "platform": {
                          "type": "string",
                          "examples": [
                            "airbnb"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "Payout"
                          ]
                        },
                        "details": {
                          "type": "string",
                          "examples": [
                            "sunt"
                          ]
                        },
                        "reference": {
                          "type": "string",
                          "examples": [
                            "iure"
                          ]
                        },
                        "currency": {
                          "type": "string",
                          "examples": [
                            "EUR"
                          ]
                        },
                        "amount": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "default": 0,
                              "examples": [
                                12345
                              ]
                            },
                            "formatted": {
                              "type": "string",
                              "examples": [
                                "€123.45"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "examples": [
                                "EUR"
                              ]
                            }
                          }
                        },
                        "paid_out_amount": {
                          "type": "object",
                          "properties": {
                            "amount": {
                              "type": "integer",
                              "default": 0,
                              "examples": [
                                12345
                              ]
                            },
                            "formatted": {
                              "type": "string",
                              "examples": [
                                "€123.45"
                              ]
                            },
                            "currency": {
                              "type": "string",
                              "examples": [
                                "EUR"
                              ]
                            }
                          }
                        },
                        "date": {
                          "type": "string",
                          "examples": [
                            "2019-01-01T12:00:00+00:00"
                          ]
                        },
                        "start_date": {
                          "type": "string",
                          "examples": [
                            "2019-01-01T12:00:00+00:00"
                          ]
                        },
                        "payout": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "examples": [
                                "8e1b74d7-0966-3a82-b722-73b4bea134e2"
                              ]
                            },
                            "platform": {
                              "type": "string",
                              "examples": [
                                "airbnb"
                              ]
                            },
                            "platform_id": {
                              "type": "string",
                              "examples": [
                                "voluptatem"
                              ]
                            },
                            "bank_account": {
                              "type": "string",
                              "examples": [
                                "provident"
                              ]
                            },
                            "reference": {
                              "type": "string",
                              "examples": [
                                "ducimus"
                              ]
                            },
                            "amount": {
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "type": "integer",
                                  "default": 0,
                                  "examples": [
                                    991039
                                  ]
                                },
                                "formatted": {
                                  "type": "string",
                                  "examples": [
                                    "$9,910.39"
                                  ]
                                },
                                "currency": {
                                  "type": "string",
                                  "examples": [
                                    "USD"
                                  ]
                                }
                              }
                            },
                            "date": {}
                          }
                        },
                        "reservation": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/reservations/{uuid}/enrichment": {
      "get": {
        "tags": [
          "Enrichable Shortcodes"
        ],
        "summary": "List Enrichable Shortcodes",
        "description": "<!-- theme: warning -->\n>Returns enrichable shortcodes scoped to the client.\n\n> 🚧 **Requires Vendor access**\n> \n> This endpoint is restricted to Vendors only. To become a vendor, [learn more here](authentication-3#applying-to-become-an-approved-vendor)\n\n> 📘 **Required scopes:**\n> \n> - enrichment:read",
        "operationId": "list-enrichable-shortcodes-by-reservation",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string",
                            "enum": [
                              "guidebook",
                              "rental_agreement",
                              "smartlock_code",
                              "upsell"
                            ]
                          },
                          "value": {},
                          "meta": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "examples": [
                                  "A link to your property guidebook, which will be populated anytime the %guidebook% short code is used in your messaging rules."
                                ]
                              },
                              "example": {
                                "type": "string",
                                "examples": [
                                  "Your guidebook URL"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/reservations/{uuid}/enrichment/{key}": {
      "get": {
        "tags": [
          "Enrichable Shortcodes"
        ],
        "summary": "Get an Enrichable Shortcode by Key",
        "description": "<!-- theme: warning -->\n> 🚧 **Requires Vendor access**\n> \n> This endpoint is restricted to Vendors only. To become a vendor, [learn more here](authentication-3#applying-to-become-an-approved-vendor)\n\n> 📘 **Scopes required:**\n> \n> - enrichment:read",
        "operationId": "get-enrichable-shortcode-by-key",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Shortcode to retrieve, like guidebook or rental_agreement",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "enum": [
                            "guidebook",
                            "rental_agreement",
                            "smartlock_code",
                            "upsell"
                          ]
                        },
                        "value": {},
                        "meta": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "examples": [
                                "A link to your property guidebook, which will be populated anytime the %guidebook% short code is used in your messaging rules."
                              ]
                            },
                            "example": {
                              "type": "string",
                              "examples": [
                                "Your guidebook URL"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      },
      "put": {
        "tags": [
          "Enrichable Shortcodes"
        ],
        "summary": "Set an Enrichable Shortcode",
        "description": "<!-- theme: warning -->\n> 🚧 **Requires Vendor access**\n> \n> This endpoint is restricted to Vendors only. To become a vendor, [learn more here](authentication-3#applying-to-become-an-approved-vendor)\n\n> 📘 **Scopes required:**\n> \n> - enrichment:write",
        "operationId": "get-an-enrichable-shortcode-by-key-copy",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "The key of the Shortcode to retrieve, like guidebook or rental_agreement",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "The new value of the shortcode. Must be either a string or null, max 255 chars."
                  }
                },
                "required": [
                  "value"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string",
                          "examples": [
                            "guidebook"
                          ]
                        },
                        "value": {
                          "type": "string",
                          "examples": [
                            "<new value>"
                          ]
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "string",
                              "examples": [
                                "A link to your property guidebook, which will be populated anytime the %guidebook% short code is used in your messaging rules."
                              ]
                            },
                            "example": {
                              "type": "string",
                              "examples": [
                                "Your guidebook URL"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User & Billing",
        "operationId": "get-user-and-billing",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5c05eb47-b6ec-54fe-b4b9-6e95f50b86d0"
                          ]
                        },
                        "email": {
                          "type": "string",
                          "examples": [
                            "john.doe@hotmail.com"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "John Doe"
                          ]
                        },
                        "business": {
                          "type": "boolean",
                          "default": true,
                          "examples": [
                            true
                          ]
                        },
                        "company": {
                          "type": "string",
                          "examples": [
                            "Johny Doe & Co"
                          ]
                        },
                        "vat": {},
                        "tax_id": {},
                        "street_line1": {
                          "type": "string",
                          "examples": [
                            "878 PEACHTREE ST"
                          ]
                        },
                        "street_line2": {},
                        "postal_code": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            30301
                          ]
                        },
                        "city": {
                          "type": "string",
                          "examples": [
                            "Atlanta"
                          ]
                        },
                        "region": {},
                        "country": {
                          "type": "string",
                          "examples": [
                            "United States"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/inquiries": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Get Inquries",
        "description": "<!-- theme: warning -->\n> 📘 **Available includes**:\n> - guest\n> - user\n> - financials (required: `financials:read` scope)\n> - listings (required: `listing:read` scope)  \n> - properties (required: `property:read` scope)\n",
        "operationId": "get-inquiries",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number you would like to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The number of results to include per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Array of property UUIDs to query for.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: financials,guest,properties,listings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_message_at",
            "in": "query",
            "description": "Find inquiries where the last message is after the specified datetime",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Inquiry"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/inquiries?page=1"
                          ]
                        },
                        "last": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/inquiries?page=50"
                          ]
                        },
                        "prev": {},
                        "next": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/inquiries?page=2"
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "from": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "last_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            50
                          ]
                        },
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {},
                              "label": {
                                "type": "string",
                                "examples": [
                                  "&laquo; Previous"
                                ]
                              },
                              "active": {
                                "type": "boolean",
                                "default": true,
                                "examples": [
                                  false
                                ]
                              }
                            }
                          }
                        },
                        "path": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/inquiries"
                          ]
                        },
                        "per_page": {
                          "type": "integer",
                          "maximum": 100,
                          "default": 10,
                          "examples": [
                            2
                          ]
                        },
                        "to": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            2
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            100
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/inquiries/{uuid}": {
      "get": {
        "tags": [
          "Inquiries"
        ],
        "summary": "Get Inquiry by UUID",
        "description": "<!-- theme: warning -->\n> 📘 **Available includes**:\n> - guest\n> - user\n> - financials (required: `financials:read` scope)\n> - listings (required: `listing:read` scope)  \n> - properties (required: `property:read` scope)\n> - messages ( required: `message:read` scope)\n",
        "operationId": "get-inquiry",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: financials,guest,properties,listings,messages",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "This is the conversation_id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Inquiry"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "messages": {
                              "$ref": "#/components/schemas/Message"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          },
          "410": {
            "description": "Once an Inquiry has become a Reservation you will need to use the reservation endpoint to retrieve it",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "integer",
                      "default": 0,
                      "examples": [
                        410
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "This Inquiry is now a Reservation and can be retrieved by the Reservation API. See the location header."
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "location": {
                "schema": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://api.hospitable.test/v2/api/reservations/123"
                },
                "description": "The location of the reservation api for the new reservation"
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/reservations": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get Reservations",
        "description": "> 📘 **Available includes**:\n> \n> - guest\n> - user\n> - financials (required: `financials:read` scope)\n> - listings (required: `listing:read` scope)  \n> - properties (required: `property:read` scope)\n> - review (required: `reviews:read` scope)\n\n<!-- theme: warning -->\n> We will default to reservations with check-in dates in the next 2 weeks if at least one of these query parameters are not provided:\n> - `start_date`\n> - `end_date`\n> - `date_query`",
        "operationId": "get-reservations",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number you would like to retrieve",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The number of results to include per page.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "properties[]",
            "in": "query",
            "description": "Array of property UUIDs to query for. ",
            "required": true,
            "schema": {
              "type": "array",
              "examples": [
                "?properties[]=1234&properties[]=6789"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Find reservations with check-in/check-out dates after this day. ",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "\\d{4}-\\d{2}-\\d{2}"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Find reservations with check-in/check-out dates before this day. ",
            "schema": {
              "type": "string",
              "format": "date",
              "pattern": "\\d{4}-\\d{2}-\\d{2}",
              "examples": [
                "2020-02-28"
              ]
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: financials,financialsV2,guest,properties,listings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_query",
            "in": "query",
            "description": "Configure whether to use your date values to search by 'checkin' or 'checkout'.",
            "schema": {
              "type": "string",
              "default": "checkin"
            }
          },
          {
            "name": "platform_id",
            "in": "query",
            "description": "Find reservations with a reservation code that exactly matches the one given",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "conversation_id",
            "in": "query",
            "description": "Find reservations with a conversation id that exactly matches the one given",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_message_at",
            "in": "query",
            "description": "Find reservations where the last message is after the specified datetime",
            "schema": {
              "type": "string",
              "format": "date-time",
              "pattern": "\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}",
              "examples": [
                "2024-01-01 12:00:00"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ReservationFull"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reservations?page=1"
                          ]
                        },
                        "last": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reservations?page=50"
                          ]
                        },
                        "prev": {},
                        "next": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reservations?page=2"
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "from": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "last_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            50
                          ]
                        },
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {},
                              "label": {
                                "type": "string",
                                "examples": [
                                  "&laquo; Previous"
                                ]
                              },
                              "active": {
                                "type": "boolean",
                                "default": true,
                                "examples": [
                                  false
                                ]
                              }
                            }
                          }
                        },
                        "path": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reservations"
                          ]
                        },
                        "per_page": {
                          "type": "integer",
                          "maximum": 100,
                          "default": 10,
                          "examples": [
                            2
                          ]
                        },
                        "to": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            2
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            100
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/reservations/{uuid}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Get Reservation by UUID",
        "description": "<!-- theme: warning -->\n> 📘 **Available includes**:\n> \n> guest\n> user \n> financials (required: `financials:read` scope)  \n> financialsV2 (required: `financials:read` scope)  \n> listings (required: `listing:read` scope)  \n> properties (required: `property:read` scope)\n\n\n",
        "operationId": "get-reservation",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: financials,guest,properties,listings",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the reservation to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ReservationFull"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/reservations/{uuid}/messages": {
      "get": {
        "tags": [
          "Messaging"
        ],
        "summary": "Get Reservation Messages",
        "description": "<!-- theme: warning -->\n> 📘 **Scopes required:**\n> \n> - message:read",
        "operationId": "get-reservation-messages",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the reservation to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400",
                  "__errors__": {
                    "#/components/schemas/400": "No foreign doc with id components found"
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      },
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Send Message for Reservation",
        "description": "<!-- theme: warning -->\n> 📘 **Scopes required:**\n> \n> - message:write\n> Please write to team-platform@hospitable.com in order to get this scope added to your token.\n\n\n> ❗️ **Rate Limits**: \n> - Only 2 messages per minute can be sent to a single reservation\n> - Only 50 messages can be sent every 5 minutes\n",
        "operationId": "send-reservation-message",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "The UUID of the reservation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "Text body of the message to send. Note:\n- HTML is not supported.\n- `/n` is parsed for line breaks."
                  },
                  "images": {
                    "type": "array",
                    "description": "The URL location of any images to attach to the message.\n\n- Maximum of 3 images.\n- The maximum filesize is 5MB.",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 3
                    }
                  }
                },
                "required": [
                  "body"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Result": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "400",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "integer",
                      "default": 0,
                      "examples": [
                        400
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "The body field is required."
                      ]
                    },
                    "message": {
                      "type": "string",
                      "examples": [
                        "The body field is required."
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "deprecated": false,
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/inquiries/{uuid}/messages": {
      "post": {
        "tags": [
          "Messaging"
        ],
        "summary": "Send Message for Inquiry",
        "description": "<!-- theme: warning -->\n> 📘 **Scopes required:**\n> \n> - message:write\n> Please write to team-platform@hospitable.com in order to get this scope added to your token.\n\n\n> ❗️ **Rate Limits**: \n> - Only 2 messages per minute can be sent to a single inquiry\n> - Only 50 messages can be sent every 5 minutes\n",
        "operationId": "send-inquiry-message",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "application/json"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "This is the conversation_id.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "Text body of the message to send. Note:\n- HTML is not supported.\n- `/n` is parsed for line breaks."
                  },
                  "images": {
                    "type": "array",
                    "description": "The URL location of any images to attach to the message.\n\n- Maximum of 3 images.\n- The maximum filesize is 5MB.\n- Airbnb does not support attachments on Inquries!",
                    "items": {
                      "type": "string",
                      "format": "uri",
                      "minLength": 3
                    }
                  }
                },
                "required": [
                  "body"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "201",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "Result": {
                    "value": {}
                  }
                }
              }
            }
          },
          "400": {
            "description": "Booking.com inquiries don't always allow messaging. See [Booking.com's Partner Hub article on pre-booking messaging](https://partner.booking.com/en-us/hosts/pre-booking-messaging).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "integer",
                      "examples": [
                        400
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "Messaging is not enabled for this Booking.com thread."
                      ]
                    },
                    "message": {
                      "type": "string",
                      "examples": [
                        "Messaging is not enabled for this Booking.com thread."
                      ]
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "Once an Inquiry has become a Reservation you will need to use the reservation endpoint to message it",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "integer",
                      "default": 0,
                      "examples": [
                        410
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "This Inquiry is now a Reservation and can be retrieved by the Reservation API. See the location header."
                      ]
                    }
                  }
                }
              }
            },
            "headers": {
              "location": {
                "schema": {
                  "type": "string",
                  "format": "uri",
                  "example": "https://api.hospitable.test/v2/api/reservations/123/messages"
                },
                "description": "The location of the reservation api for the new reservation"
              }
            }
          }
        },
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/properties/{uuid}/reviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "summary": "Get Property Reviews",
        "description": "<!-- theme: warning -->\nReturns a paginated list of reviews that guests have left for a specific property. Currently, we source review data from Airbnb and our own direct bookings.\n\n\n<!-- theme: none -->\n>📘 Required scopes:\n> - reviews:read\n\n<!-- theme: none -->\n> 📘 Available includes:\n> \n> - guest \n> - reservations",
        "operationId": "get-property-reviews",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number of results",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of results per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Comma-separated values, any of: guest",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uuid",
            "in": "path",
            "description": "UUID of the property",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Review_2"
                      }
                    },
                    "links": {
                      "type": "object",
                      "properties": {
                        "first": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reviews?page=1"
                          ]
                        },
                        "last": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reviews?page=50"
                          ]
                        },
                        "prev": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reviews?page=50"
                          ]
                        },
                        "next": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reviews?page=2"
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "from": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            1
                          ]
                        },
                        "last_page": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            50
                          ]
                        },
                        "links": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {},
                              "label": {
                                "type": "string",
                                "examples": [
                                  "&laquo; Previous"
                                ]
                              },
                              "active": {
                                "type": "boolean",
                                "default": true,
                                "examples": [
                                  false
                                ]
                              }
                            }
                          }
                        },
                        "path": {
                          "type": "string",
                          "examples": [
                            "https://public.api.hospitable.com/v2/reviews"
                          ]
                        },
                        "per_page": {
                          "type": "integer",
                          "maximum": 100,
                          "default": 10,
                          "examples": [
                            2
                          ]
                        },
                        "to": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            2
                          ]
                        },
                        "total": {
                          "type": "integer",
                          "default": 0,
                          "examples": [
                            100
                          ]
                        }
                      }
                    },
                    "": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Property not found"
          },
          "4XX": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4xx"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    },
    "/reviews/{uuid}/respond": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "summary": "Respond to a review",
        "description": "<!-- theme: warning -->\nResponse to a review received for a reservation.\n\n<!-- theme: none -->\n>📘 Required scopes:\n> - reviews:write\n\n",
        "operationId": "post-reviews-uuid-respond",
        "parameters": [
          {
            "name": "uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "response": {
                    "type": "string"
                  }
                },
                "required": [
                  "response"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review_2"
                }
              }
            }
          },
          "403": {
            "description": "If the review can not be responded to because:\n\n- It has already been responsed to.\n- The review has not been responded to within the response window.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "string",
                      "default": 403,
                      "examples": [
                        "403"
                      ]
                    },
                    "reason_phrase": {
                      "type": "string",
                      "examples": [
                        "The response window is closed."
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Review Not Found"
          },
          "4XX": {
            "description": "Client Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/4xx"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer-Authorization": []
          }
        ],
        "servers": [
          {
            "url": "https://public.api.hospitable.com/v2",
            "description": "Production"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer-Authorization": {
        "type": "http",
        "description": "Enter the token with the `Bearer ` prefix, e.g. `Bearer abcde12345`",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "400": {
        "x-internal": true,
        "x-stoplight": {
          "internallyExcluded": true,
          "errorMessage": "This object is set as internal and excluded."
        }
      },
      "404": {
        "x-internal": true,
        "x-stoplight": {
          "internallyExcluded": true,
          "errorMessage": "This object is set as internal and excluded."
        }
      },
      "500": {
        "x-internal": true,
        "x-stoplight": {
          "internallyExcluded": true,
          "errorMessage": "This object is set as internal and excluded."
        }
      },
      "PropertyFull": {
        "title": "PropertyFull",
        "allOf": [
          {
            "$ref": "#/components/schemas/Property"
          },
          {
            "type": "object",
            "properties": {
              "bookings": {
                "$ref": "#/components/schemas/Property_bookings"
              },
              "details": {
                "$ref": "#/components/schemas/Property_details"
              },
              "user": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        ]
      },
      "Property": {
        "type": "object",
        "title": "Property",
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              "550e8400-e29b-41d4-a716-446655440000"
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Relaxing Villa near the sea"
            ]
          },
          "public_name": {
            "type": "string",
            "examples": [
              "Relaxing Villa near the sea"
            ]
          },
          "picture": {
            "type": "string",
            "examples": [
              "https://cdn2.thecatapi.com/images/d9m.jpg"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "description": "Apartment or unit number.",
                "examples": [
                  "32"
                ]
              },
              "street": {
                "type": "string",
                "examples": [
                  "Senefelderplatz"
                ]
              },
              "city": {
                "type": "string",
                "examples": [
                  "Berlin"
                ]
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string",
                "examples": [
                  "DE"
                ]
              },
              "postcode": {
                "type": "string",
                "examples": [
                  "10405"
                ]
              },
              "coordinates": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "default": 0,
                    "examples": [
                      50.8514786
                    ]
                  },
                  "longitude": {
                    "type": "number",
                    "default": 0,
                    "examples": [
                      4.364562
                    ]
                  }
                },
                "required": [
                  "latitude",
                  "longitude"
                ]
              },
              "display": {
                "type": "string",
                "examples": [
                  "37a Senefelderplatz, 10405 Berlin, DE"
                ]
              }
            },
            "required": [
              "number",
              "street",
              "city",
              "state",
              "country",
              "postcode",
              "coordinates",
              "display"
            ]
          },
          "timezone": {
            "type": "string",
            "examples": [
              "+0200"
            ]
          },
          "listed": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ]
          },
          "amenities": {
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "shower"
              ]
            }
          },
          "description": {
            "type": "string",
            "examples": [
              "Example Description"
            ]
          },
          "summary": {
            "type": "string",
            "examples": [
              "Example Summary"
            ]
          },
          "check-in": {
            "type": "string",
            "description": "The default checkin time for the property.",
            "examples": [
              "12:30"
            ]
          },
          "check-out": {
            "type": "string",
            "description": "The default checkout time for the property.",
            "examples": [
              "12:30"
            ]
          },
          "currency": {
            "type": "string",
            "examples": [
              "EUR"
            ]
          },
          "capacity": {
            "type": "object",
            "properties": {
              "max": {
                "type": [
                  "integer",
                  "null"
                ],
                "default": 0,
                "examples": [
                  2
                ]
              },
              "bedrooms": {
                "type": [
                  "integer",
                  "null"
                ],
                "default": 0,
                "examples": [
                  1
                ]
              },
              "beds": {
                "type": [
                  "number",
                  "null"
                ],
                "default": 0,
                "examples": [
                  1
                ]
              },
              "bathrooms": {
                "type": [
                  "number",
                  "null"
                ],
                "default": 0,
                "examples": [
                  1.5
                ]
              }
            }
          },
          "room_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "examples": [
                    "king_size"
                  ]
                },
                "quantity": {
                  "type": "integer",
                  "default": 0,
                  "examples": [
                    1
                  ]
                }
              },
              "required": [
                "type",
                "quantity"
              ]
            }
          },
          "house_rules": {
            "type": "object",
            "properties": {
              "pets_allowed": {
                "type": "boolean",
                "default": true,
                "examples": [
                  true
                ]
              },
              "smoking_allowed": {
                "type": "boolean",
                "default": true,
                "examples": [
                  false
                ]
              },
              "events_allowed": {}
            },
            "required": [
              "pets_allowed",
              "smoking_allowed",
              "events_allowed"
            ]
          },
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string",
                  "examples": [
                    "airbnb"
                  ]
                },
                "platform_id": {
                  "type": "string",
                  "description": "This is the listing id used on the platform.",
                  "examples": [
                    "24488"
                  ]
                },
                "platform_name": {
                  "type": "string",
                  "description": "`pat:read` scope only"
                },
                "platform_email": {
                  "type": "string",
                  "description": "`pat:read` scope only"
                }
              },
              "required": [
                "platform",
                "platform_id",
                "platform_name",
                "platform_email"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Tag"
              ]
            }
          },
          "property_type": {
            "type": "string"
          },
          "room_type": {
            "type": "string"
          },
          "calendar_restricted": {
            "type": "boolean",
            "description": "If a property is `calendar_restricted` its calendar will not be able to be updated using the Update Property Calendar endpoint"
          },
          "parent_child": {
            "type": [
              "object",
              "null"
            ],
            "description": "If the property is in a Parent/Child setup then this will contain all the information about that relationship.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "parent",
                  "child"
                ],
                "description": "If this property is the parent or child in the relationship."
              },
              "parent": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "If this property is a child, this is the parent property id.",
                "examples": [
                  "550e8400-e29b-41d4-a716-446655440000"
                ]
              },
              "children": {
                "type": "array",
                "description": "If this property is a parent, this is any child property ids",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "examples": [
                    "550e8400-e29b-41d4-a716-446655440000"
                  ]
                }
              },
              "siblings": {
                "type": "array",
                "description": "If this property is a child, this is any sibling property ids. These are other child properties of this properties parent.",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "examples": [
                    "550e8400-e29b-41d4-a716-446655440000"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name",
          "public_name",
          "picture",
          "address",
          "timezone",
          "listed",
          "amenities",
          "description",
          "summary",
          "check-in",
          "check-out",
          "currency",
          "capacity",
          "room_details",
          "house_rules",
          "listings",
          "tags",
          "property_type",
          "room_type",
          "calendar_restricted"
        ],
        "examples": [],
        "x-examples": {
          "Example 1": {
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "name": "Relaxing Villa near the sea",
            "public_name": "Relaxing Villa near the sea",
            "picture": "https://cdn2.thecatapi.com/images/d9m.jpg",
            "address": {
              "number": "32",
              "street": "Senefelderplatz",
              "city": "Berlin",
              "state": "",
              "country": "DE",
              "postcode": "10405",
              "coordinates": {
                "latitude": 50.8514786,
                "longitude": 4.364562
              },
              "display": "37a Senefelderplatz, 10405 Berlin, DE"
            },
            "timezone": "+0200",
            "listed": true,
            "amenities": [
              "shower",
              "oven"
            ],
            "description": "Example Description",
            "summary": "Example Summary",
            "check-in": "12:30",
            "currency": "EUR",
            "capacity": {
              "max": 2,
              "bedrooms": 1,
              "beds": 1,
              "bathrooms": 1
            },
            "room_details": [
              {
                "type": "king_size",
                "quantity": 1
              }
            ],
            "house_rules": {
              "pets_allowed": true,
              "smoking_allowed": false,
              "events_allowed": null
            },
            "listings": [
              {
                "platform": "airbnb",
                "platform_id": "24488"
              }
            ],
            "tags": [
              "Tag1",
              "Tag2"
            ]
          }
        }
      },
      "Property_bookings": {
        "type": "object",
        "title": "Property_bookings",
        "properties": {
          "booking_policies": {
            "type": "object",
            "properties": {
              "cancellation": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "100% refund 24 hours after booking accepted, if booking is requested at least 24 hours before check-in"
                  ]
                }
              },
              "payment_terms": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "aligned",
                      "disabled",
                      "manual"
                    ]
                  },
                  "description": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "50% due 10 days before check-in"
                      ]
                    }
                  },
                  "grace_period": {
                    "type": "string",
                    "description": "Grace period in hours on missed payments before cancelling a booking",
                    "examples": [
                      "48 hours"
                    ]
                  }
                },
                "required": [
                  "status",
                  "description",
                  "grace_period"
                ],
                "examples": [
                  "Guests always pay 100% upfront"
                ]
              }
            },
            "required": [
              "cancellation",
              "payment_terms"
            ]
          },
          "listing_markups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "booking",
                    "airbnb",
                    "vrbo",
                    "direct",
                    "agoda"
                  ]
                },
                "type": {
                  "const": "percent"
                },
                "value": {
                  "type": "number",
                  "default": 15
                }
              },
              "required": [
                "platform",
                "type",
                "value"
              ]
            }
          },
          "security_deposits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "enum": [
                    "base",
                    "direct"
                  ]
                },
                "type": {
                  "const": "fixed"
                },
                "value": {
                  "$ref": "#/components/schemas/FinancialV2"
                }
              },
              "required": [
                "name",
                "type",
                "value"
              ]
            }
          },
          "occupancy_based_rules": {
            "type": "object",
            "properties": {
              "guests_included": {
                "type": "integer",
                "description": "The number of guests included in the base fee.",
                "minimum": 1
              },
              "extra_guest_fee": {
                "type": "object",
                "description": "The fee for any guests above the guests_included.",
                "properties": {
                  "type": {
                    "const": "fixed"
                  },
                  "value": {
                    "$ref": "#/components/schemas/FinancialV2"
                  }
                },
                "required": [
                  "type",
                  "value"
                ]
              },
              "pet_fee": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "The fee per pet; does not include service animals",
                "properties": {
                  "type": {
                    "const": "fixed"
                  },
                  "value": {
                    "$ref": "#/components/schemas/FinancialV2"
                  }
                },
                "required": [
                  "type",
                  "value"
                ]
              }
            },
            "required": [
              "guests_included",
              "extra_guest_fee",
              "pet_fee"
            ]
          },
          "fees": {
            "type": "array",
            "description": "All fees that will be applied to a booking",
            "items": {
              "type": "object",
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "cleaning_fee",
                        "linens_fee",
                        "management_fee",
                        "community_fee",
                        "resort_fee"
                      ],
                      "examples": [
                        "cleaning_fee"
                      ]
                    },
                    "type": {
                      "const": "fixed"
                    },
                    "value": {
                      "$ref": "#/components/schemas/FinancialV2"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "cleaning_fee",
                        "linens_fee",
                        "management_fee",
                        "community_fee",
                        "resort_fee"
                      ],
                      "examples": [
                        "management_fee"
                      ]
                    },
                    "type": {
                      "const": "percent",
                      "default": "percent",
                      "examples": [
                        "percent"
                      ]
                    },
                    "value": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              ]
            }
          },
          "discounts": {
            "type": "array",
            "description": "Discounts that could be applied to a booking",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "enum": [
                    "weekly",
                    "monthly"
                  ]
                },
                "type": {
                  "const": "percent"
                },
                "value": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        },
        "required": [
          "booking_policies",
          "listing_markups",
          "security_deposits",
          "occupancy_based_rules"
        ],
        "examples": [
          {
            "booking_policies": {
              "cancellation": [
                "100% refund 24 hours after booking accepted, if booking is requested at least 24 hours before check-in"
              ],
              "payment_terms": {
                "status": "manual",
                "description": [
                  "20% due at booking",
                  "30% due 45 days before check-in",
                  "50% due 10 days before check-in"
                ],
                "grace_period": "48 hours"
              }
            },
            "listing_markups": [
              {
                "platform": "booking",
                "type": "percent",
                "value": 15
              }
            ],
            "security_deposits": [
              {
                "name": "base",
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              },
              {
                "name": "direct",
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              }
            ],
            "occupancy_based_rules": {
              "guests_included": 1,
              "extra_guest_fee": {
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              },
              "pet_fee": {
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              }
            },
            "fees": [
              {
                "name": "cleaning_fee",
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              },
              {
                "name": "managment_fee",
                "type": "percent",
                "value": 10
              }
            ],
            "discounts": [
              {
                "name": "weekly",
                "type": "percent",
                "value": 10
              },
              {
                "name": "monthly",
                "type": "percent",
                "value": 10
              }
            ]
          }
        ]
      },
      "FinancialV2": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "examples": [
              12345
            ]
          },
          "formatted": {
            "type": "string",
            "examples": [
              "$123.45"
            ]
          }
        }
      },
      "Property_details": {
        "type": "object",
        "title": "Property_details",
        "properties": {
          "space_overview": {
            "type": "string"
          },
          "guest_access": {
            "type": "string"
          },
          "house_manual": {
            "type": "string"
          },
          "other_details": {
            "type": "string"
          },
          "additional_rules": {
            "type": "string"
          },
          "neighborhood_description": {
            "type": "string"
          },
          "getting_around": {
            "type": "string"
          },
          "wifi_name": {
            "type": "string"
          },
          "wifi_password": {
            "type": "string"
          }
        }
      },
      "user": {
        "type": "object",
        "title": "user",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "NegativeFinancial": {
        "type": "object",
        "title": "NegativeFinancial",
        "properties": {
          "amount": {
            "type": "integer",
            "examples": [
              -12345
            ]
          },
          "formatted": {
            "type": "string",
            "examples": [
              "$-123.45"
            ]
          }
        }
      },
      "Inquiry": {
        "type": "object",
        "title": "Inquiry",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is the `conversation_id`.",
            "examples": [
              "6f58fd0a-a9cb-3746-9219-384a156ff7bb"
            ]
          },
          "platform": {
            "type": "string",
            "examples": [
              "homeaway"
            ]
          },
          "inquiry_date": {
            "type": "string",
            "examples": [
              "2019-01-01T12:00:00Z"
            ]
          },
          "arrival_date": {
            "type": "string",
            "examples": [
              "2019-01-03T00:00:00-05:00"
            ]
          },
          "departure_date": {
            "type": "string",
            "examples": [
              "2019-01-05T00:00:00-05:00"
            ]
          },
          "guests": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "default": 0,
                "examples": [
                  1
                ]
              },
              "adult_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  1
                ]
              },
              "child_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              },
              "infant_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              },
              "pet_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              }
            },
            "required": [
              "total",
              "adult_count",
              "child_count",
              "infant_count",
              "pet_count"
            ]
          },
          "guest": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "examples": [
                  "Beulah"
                ]
              },
              "last_name": {
                "type": "string",
                "examples": [
                  "Hane"
                ]
              }
            },
            "required": [
              "first_name",
              "last_name"
            ]
          },
          "properties": {
            "$ref": "#/components/schemas/Property"
          },
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string",
                  "examples": [
                    "airbnb"
                  ]
                },
                "platform_id": {
                  "type": "string",
                  "examples": [
                    "24488"
                  ]
                },
                "platform_name": {
                  "type": "string",
                  "description": "only available for `pat:read` scope"
                },
                "platform_email": {
                  "type": "string",
                  "description": "only available for `pat:read` scope"
                }
              }
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "id",
          "platform",
          "inquiry_date",
          "guests",
          "guest"
        ]
      },
      "Message": {
        "type": "object",
        "title": "Message",
        "properties": {
          "platform": {
            "type": "string",
            "examples": [
              "airbnb"
            ]
          },
          "platform_id": {
            "type": "integer",
            "default": 0,
            "examples": [
              1130024
            ]
          },
          "conversation_id": {
            "type": "string",
            "examples": [
              "becd1474-ccd1-40bf-9ce8-04456bfa338d"
            ]
          },
          "reservation_id": {
            "anyOf": [
              {
                "type": "string",
                "examples": [
                  "becd1474-ccd1-40bf-9ce8-04456bfa338d"
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "content_type": {
            "type": "string",
            "examples": [
              "text/plain"
            ]
          },
          "body": {
            "type": "string",
            "examples": [
              "Hello, there."
            ]
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "const": "image"
                },
                "url": {
                  "type": "string",
                  "default": "The image location URL"
                }
              }
            }
          },
          "sender_type": {
            "type": "string",
            "examples": [
              "host|guest"
            ]
          },
          "sender_role": {
            "type": "string",
            "examples": [
              "host|co-host|teammate|null"
            ]
          },
          "sender": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "examples": [
                  "Jane"
                ]
              },
              "full_name": {
                "type": "string",
                "examples": [
                  "Jane Doe"
                ]
              },
              "locale": {
                "type": "string",
                "examples": [
                  "en"
                ]
              },
              "picture_url": {
                "type": "string",
                "examples": [
                  "https://a0.muscache.com/im/pictures/user/f391da23-c76e-4728-a9f2-25cc139a13cc.jpg?aki_policy=profile_x_medium"
                ]
              },
              "thumbnail_url": {
                "type": "string",
                "examples": [
                  "https://a0.muscache.com/im/pictures/user/f391da23-c76e-4728-a9f2-25cc139a13cc.jpg?aki_policy=profile_x_medium"
                ]
              },
              "location": {}
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "examples": [
              "2019-07-29T19:01:14Z"
            ]
          }
        }
      },
      "ReservationFull": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Reservation"
          },
          {
            "type": "object",
            "properties": {
              "financials": {
                "$ref": "#/components/schemas/FinancialsV2"
              },
              "properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "listings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "platform": {
                      "type": "string",
                      "examples": [
                        "airbnb"
                      ]
                    },
                    "platform_id": {
                      "type": "string",
                      "examples": [
                        "24488"
                      ]
                    },
                    "platform_name": {
                      "type": "string",
                      "description": "only available for `pat:read` scope"
                    },
                    "platform_email": {
                      "type": "string",
                      "description": "only available for `pat:read` scope"
                    }
                  }
                }
              },
              "guest": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "12345"
                    ]
                  },
                  "profile_picture": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "location": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "London, United Kingdom"
                    ]
                  },
                  "first_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "John"
                    ]
                  },
                  "last_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "Doe"
                    ]
                  },
                  "email": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "john.doe@example.com"
                    ]
                  },
                  "phone_numbers": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "user": {
                "$ref": "#/components/schemas/user"
              },
              "review": {
                "type": "null",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Review"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ]
      },
      "Reservation": {
        "type": "object",
        "title": "Reservation",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "6f58fd0a-a9cb-3746-9219-384a156ff7bb"
            ]
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "6f58fd0a-a9cb-3746-9219-384a156ff7bb"
            ]
          },
          "platform": {
            "type": "string",
            "enum": [
              "airbnb",
              "homeaway",
              "booking",
              "direct",
              "manual"
            ],
            "readOnly": true,
            "examples": [
              "homeaway"
            ]
          },
          "platform_id": {
            "type": "string",
            "description": "The reservation code",
            "examples": [
              "ABC123"
            ]
          },
          "booking_date": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-01T12:00:00Z"
            ]
          },
          "arrival_date": {
            "type": "string",
            "description": "This provides only the date, not the exact check-in time. Refer to check_in.",
            "format": "date-time",
            "examples": [
              "2019-01-03T00:00:00-05:00"
            ]
          },
          "departure_date": {
            "type": "string",
            "description": "This provides only the date, not the exact check-out time. Refer to check_out.",
            "format": "date-time",
            "examples": [
              "2019-01-05T00:00:00-05:00"
            ]
          },
          "nights": {
            "type": "integer"
          },
          "check_in": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-03T13:00:00-05:00"
            ]
          },
          "check_out": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-05T11:00:00-05:00"
            ]
          },
          "last_message_at": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-05T11:00:00-00:00"
            ]
          },
          "status": {
            "type": "string",
            "examples": [
              "booking"
            ],
            "x-deprecated": true
          },
          "reservation_status": {
            "type": "object",
            "properties": {
              "current": {
                "$ref": "#/components/schemas/Reservation_Status"
              },
              "history": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Reservation_Status"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "changed_at": {
                          "type": "string",
                          "examples": [
                            "2019-01-03T12:00:00-05:00"
                          ]
                        }
                      },
                      "required": [
                        "changed_at"
                      ]
                    }
                  ]
                }
              }
            },
            "required": [
              "current",
              "history"
            ]
          },
          "status_history": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "examples": [
                    "accepted"
                  ]
                },
                "sub_category": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "examples": [
                    "accepted"
                  ]
                },
                "changed_at": {
                  "type": "string",
                  "examples": [
                    "2019-01-03T12:00:00-05:00"
                  ]
                }
              },
              "required": [
                "category",
                "sub_category",
                "changed_at"
              ]
            },
            "x-deprecated": true
          },
          "guests": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "default": 0,
                "examples": [
                  1
                ]
              },
              "adult_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  1
                ]
              },
              "child_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              },
              "infant_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              },
              "pet_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              }
            },
            "required": [
              "total",
              "adult_count",
              "child_count",
              "infant_count",
              "pet_count"
            ]
          }
        },
        "required": [
          "id",
          "conversation_id",
          "platform",
          "platform_id",
          "booking_date",
          "arrival_date",
          "departure_date",
          "nights",
          "check_in",
          "check_out",
          "last_message_at",
          "status",
          "reservation_status",
          "status_history",
          "guests"
        ]
      },
      "Reservation_Status": {
        "type": "object",
        "title": "Reservation Status",
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "request",
              "accepted",
              "cancelled",
              "not accepted",
              "unknown"
            ],
            "description": "The overall status of the reservation"
          },
          "sub_category": {
            "type": "string",
            "enum": [
              "pending verification",
              "awaiting approval",
              "request to book",
              "request for payment",
              "declined",
              "withdrawn",
              "expired"
            ],
            "description": "The status of the reservation within a category"
          }
        },
        "required": [
          "category",
          "sub_category"
        ]
      },
      "FinancialsV2": {
        "type": "object",
        "properties": {
          "guest": {
            "type": "object",
            "properties": {
              "accommodation": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Accommodation"
                        ]
                      },
                      "category": {
                        "const": "Accommodation",
                        "examples": [
                          "Accommodation"
                        ]
                      }
                    }
                  }
                ]
              },
              "fees": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Guest Service Fee"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Guest fees",
                            "Other fee",
                            "Service fees"
                          ],
                          "examples": [
                            "Service fees"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "discounts": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Guest Discount"
                          ]
                        },
                        "category": {
                          "const": "Discounts",
                          "examples": [
                            "Discounts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "taxes": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Lodging taxes"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Host Tax",
                            "Taxes"
                          ],
                          "examples": [
                            "Taxes"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "adjustments": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Resolution Adjustment"
                          ]
                        },
                        "category": {
                          "const": "Total payouts",
                          "examples": [
                            "Total payouts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "total_price": {
                "description": "The total amount paid by the guest",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Guest Total Price"
                        ]
                      },
                      "category": {
                        "const": "Guest total price",
                        "examples": [
                          "Guest total price"
                        ]
                      }
                    }
                  }
                ]
              }
            },
            "required": [
              "fees",
              "discounts",
              "taxes",
              "adjustments"
            ]
          },
          "host": {
            "type": "object",
            "properties": {
              "accommodation": {
                "description": "The total accommodation amount",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Accommodation"
                        ]
                      },
                      "category": {
                        "const": "Accommodation",
                        "examples": [
                          "Accommodation"
                        ]
                      }
                    }
                  }
                ]
              },
              "accommodation_breakdown": {
                "type": "array",
                "description": "A breakdown of the price of each night of the reservation",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "format": "date",
                          "examples": [
                            "2024-01-01"
                          ]
                        },
                        "category": {
                          "const": "Accommodation",
                          "examples": [
                            "Accommodation"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "guest_fees": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Cleaning Fee"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Guest fees",
                            "Other fees",
                            "Service fees"
                          ],
                          "examples": [
                            "Other fees"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "host_fees": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Host Service Fee"
                          ]
                        },
                        "category": {
                          "const": "Service fees",
                          "examples": [
                            "Service fees"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "discounts": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Guest Discount"
                          ]
                        },
                        "category": {
                          "const": "Discounts",
                          "examples": [
                            "Discounts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "adjustments": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Resolution Adjustment"
                          ]
                        },
                        "category": {
                          "const": "Total payouts",
                          "examples": [
                            "Total payouts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "taxes": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "City taxes"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Host Tax",
                            "Collect at check-in Tax"
                          ],
                          "examples": [
                            "Host Tax"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "revenue": {
                "description": "The total revenue of the reservation after service fees",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Gross Revenue"
                        ]
                      },
                      "category": {
                        "const": "Revenue",
                        "examples": [
                          "Revenue"
                        ]
                      }
                    }
                  }
                ]
              }
            },
            "required": [
              "guest_fees",
              "host_fees",
              "discounts",
              "adjustments",
              "taxes"
            ]
          },
          "currency": {
            "type": "string",
            "examples": [
              "USD"
            ]
          }
        },
        "required": [
          "currency"
        ],
        "examples": [
          {
            "guest": {
              "accommodation": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Accommodation",
                "category": "Accommodation"
              },
              "fees": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Guest Service Fee",
                  "category": "Service fees"
                }
              ],
              "discounts": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Guest Discount",
                  "category": "Discount"
                }
              ],
              "taxes": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Lodging taxes",
                  "category": "Pass-through taxes"
                }
              ],
              "adjustments": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                },
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                }
              ],
              "total_price": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Guest Total Price",
                "category": "Total payment"
              }
            },
            "host": {
              "accommodation": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Accommodation",
                "category": "Accommodation"
              },
              "accommodation_breakdown": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "2024-01-01",
                  "category": "Accommodation"
                }
              ],
              "guest_fees": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Cleaning Fee",
                  "category": "Guest fees"
                }
              ],
              "host_fees": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Host Service Fee",
                  "category": "Service fees"
                }
              ],
              "discounts": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Guest Discount",
                  "category": "Discount"
                }
              ],
              "adjustments": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                },
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                }
              ],
              "taxes": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "City taxes",
                  "category": "Host Tax"
                }
              ],
              "revenue": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Gross Revenue",
                "category": "Revenue"
              }
            },
            "currency": "USD"
          }
        ]
      },
      "Review": {
        "type": "object",
        "title": "Review",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "550e8400-e29b-41d4-a716-446655440000"
            ]
          },
          "platform": {
            "type": "string",
            "enum": [
              "airbnb",
              "direct"
            ],
            "examples": [
              "airbnb"
            ]
          },
          "public": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5
              },
              "review": {
                "type": "string",
                "examples": [
                  "Great place we will be back!"
                ]
              },
              "response": {
                "type": "string",
                "examples": [
                  "So happy you enjoyed it so much!"
                ]
              }
            },
            "required": [
              "rating",
              "review",
              "response"
            ]
          },
          "private": {
            "type": "object",
            "properties": {
              "feedback": {
                "type": "string",
                "examples": [
                  "downstairs was a bit cold."
                ]
              },
              "detailed_ratings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "cleanliness",
                        "communication",
                        "location",
                        "checkin",
                        "accuracy",
                        "value"
                      ]
                    },
                    "rating": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 5
                    },
                    "comment": {
                      "type": "string",
                      "examples": [
                        "The cabin was cozy and comfy."
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "feedback"
            ]
          },
          "responded_at": {
            "type": "string",
            "format": "date-time"
          },
          "reviewed_at": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-03-19T10:00:00Z"
            ]
          },
          "can_respond": {
            "type": "boolean"
          },
          "guest": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "language": {
                "type": "string",
                "description": "The guest's preferred language"
              }
            },
            "required": [
              "first_name",
              "last_name"
            ]
          },
          "reservation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "examples": [
                  "550e8400-e29b-41d4-a716-446655440000"
                ]
              },
              "code": {
                "type": "string"
              },
              "check_in": {
                "type": "string",
                "format": "date-time"
              },
              "check_out": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "code",
              "check_in",
              "check_out"
            ]
          },
          "property": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "public_name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "public_name"
            ]
          },
          "listing": {
            "type": "object",
            "properties": {
              "platform": {
                "type": "string",
                "examples": [
                  "airbnb"
                ]
              },
              "platform_id": {
                "type": "string"
              }
            },
            "required": [
              "platform",
              "platform_id"
            ]
          }
        },
        "required": [
          "id",
          "platform",
          "public",
          "private"
        ]
      },
      "Review_2": {
        "$ref": "#/components/schemas/Review"
      },
      "4xx": {}
    }
  },
  "security": [
    {
      "Bearer-Authorization": []
    }
  ],
  "x-readme": {
    "headers": [],
    "explorer-enabled": true,
    "proxy-enabled": true
  },
  "x-readme-fauxas": true
}