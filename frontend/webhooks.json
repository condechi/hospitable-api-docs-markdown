{
  "openapi": "3.1.0",
  "info": {
    "version": "2.0",
    "title": "Hospitable API V2 Webhooks"
  },
  "servers": [
    {
      "url": "https://public.api.hospitable.com/v2"
    }
  ],
  "paths": {},
  "webhooks": {
    "Reservation": {
      "post": {
        "description": "> 📘 **Includes**: \n>\n> - guest\n> - financials (required: `financials:read` scope)\n> - listings (required: `listing:read` scope)\n> - properties (required: `property:read` scope) - review (required: `review:read` scope)\n>\n> **NOTE**: Includes are added automatically based on the scopes that are enabled for your integration.\n\nWe will fire the reservation webhook when the following  data is changed on a reservation:\n\n- arrival_date\n- departure_date\n- guests\n- status\n- check_in\n- check_out\n- financials\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "data": {
                    "$ref": "#/components/schemas/ReservationFull"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "reservation.created",
                      "reservation.changed"
                    ]
                  },
                  "triggers": {
                    "type": "string",
                    "enum": [
                      "status_changed",
                      "dates_changed",
                      "guests_changed",
                      "listing_changed",
                      "checkin_changed",
                      "checkout_changed",
                      "financials_changed",
                      "test",
                      "historic_reservation"
                    ]
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "examples": [
                      "2024-10-08T07:03:34Z"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "v2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "Integration Disconnected": {
      "post": {
        "description": "When a user disconnects from your integration, you will receive a `integration.disconnected` webhook. This is useful for cleaning up any data that is no longer needed.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "user": {
                        "type": "string",
                        "format": "uuid",
                        "examples": [
                          "550e8400-e29b-41d4-a716-446655440000"
                        ]
                      },
                      "disconnected_at": {
                        "type": "string",
                        "format": "date-time",
                        "examples": [
                          "2024-10-08T07:03:34Z"
                        ]
                      }
                    }
                  },
                  "action": {
                    "const": "integration.disconnected"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "examples": [
                      "2024-10-08T07:03:34Z"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "v2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "Property": {
      "post": {
        "description": "> 📘 **Includes**: \n>\n> - listings (required: `listing:read` scope) \n> - details  \n> - bookings \n>\n> **NOTE**: Includes are added automatically based on the scopes that are enabled for your integration\n\n This property webhook will be sent whenever a property is created or updated, this includes when its contained listings change as a result of a merge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "data": {
                    "$ref": "#/components/schemas/PropertyFull"
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "property.created",
                      "property.changed"
                    ]
                  },
                  "triggers": {
                    "type": "string",
                    "enum": [
                      "name",
                      "picture",
                      "address",
                      "amenities",
                      "description",
                      "summary",
                      "checkin_checkout",
                      "currency",
                      "capacity",
                      "house_rules",
                      "listings",
                      "property_type",
                      "room_type",
                      "calendar_restricted",
                      "details",
                      "parent_child",
                      "test"
                    ]
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "examples": [
                      "2024-10-08T07:03:34Z"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "v2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "Property Deleted": {
      "post": {
        "description": "This property webhook will be sent whenever a property is deleted.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "examples": [
                          "550e8400-e29b-41d4-a716-446655440000"
                        ]
                      }
                    }
                  },
                  "action": {
                    "const": "property.deleted"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "examples": [
                      "2024-10-08T07:03:34Z"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "v2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "Property Merged": {
      "post": {
        "description": "This webhook will be sent when a property is merged with another that results in one of the properties being deleted. It can be used to map any existing property id's to the new property id.\n\n We will also send a `property.changed` webhook for the new property as its listings will have been updated.\n\n  We will not send a `property.deleted` webhook for the old property as it can be handled with this webhook.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "previous_id": {
                        "type": "string",
                        "format": "uuid",
                        "examples": [
                          "550e8400-e29b-41d4-a716-446655440000"
                        ]
                      },
                      "new_id": {
                        "type": "string",
                        "format": "uuid",
                        "examples": [
                          "550e8400-e29b-41d4-a716-446655440000"
                        ]
                      }
                    }
                  },
                  "action": {
                    "const": "property.merged"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "examples": [
                      "2024-10-08T07:03:34Z"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "v2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "Message": {
      "post": {
        "description": "This webhook will be sent when a new message is created in Hospitable. We will not send messages older than 12 hours, to retrieve historic messages when a new channel is connected please use the messages API.\n\n>❗**Beta Version**\n> This webhook is a beta version. It will be subject to further development may will change in the future.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "data": {
                    "$ref": "#/components/schemas/Message"
                  },
                  "action": {
                    "const": "message.created"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "examples": [
                      "2024-10-08T07:03:34Z"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "v2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    },
    "Review": {
      "post": {
        "description": "This webhook will be sent when a new review is received.\n\n Currently, we source review data from Airbnb and our own direct bookings.\n\n > 📘 **Includes**: \n>\n> - listing (required: `listings:read` scope)\n> - property (required: `property:read` scope)\n>\n> **NOTE**: Includes are added automatically based on the scopes that are enabled for your integration.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "data": {
                    "$ref": "#/components/schemas/Review"
                  },
                  "action": {
                    "const": "review.created"
                  },
                  "created": {
                    "type": "string",
                    "format": "date-time",
                    "examples": [
                      "2024-10-08T07:03:34Z"
                    ]
                  },
                  "version": {
                    "type": "string",
                    "examples": [
                      "v2"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ReservationFull": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Reservation"
          },
          {
            "type": "object",
            "properties": {
              "financials": {
                "$ref": "#/components/schemas/FinancialsV2"
              },
              "properties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Property"
                }
              },
              "listings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "platform": {
                      "type": "string",
                      "examples": [
                        "airbnb"
                      ]
                    },
                    "platform_id": {
                      "type": "string",
                      "examples": [
                        "24488"
                      ]
                    },
                    "platform_name": {
                      "type": "string",
                      "description": "only available for `pat:read` scope"
                    },
                    "platform_email": {
                      "type": "string",
                      "description": "only available for `pat:read` scope"
                    }
                  }
                }
              },
              "guest": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "12345"
                    ]
                  },
                  "profile_picture": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "location": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "London, United Kingdom"
                    ]
                  },
                  "first_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "John"
                    ]
                  },
                  "last_name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "Doe"
                    ]
                  },
                  "email": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "examples": [
                      "john.doe@example.com"
                    ]
                  },
                  "phone_numbers": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "user": {
                "$ref": "#/components/schemas/user"
              },
              "review": {
                "type": "null",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Review"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        ]
      },
      "Reservation": {
        "type": "object",
        "title": "Reservation",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "6f58fd0a-a9cb-3746-9219-384a156ff7bb"
            ]
          },
          "conversation_id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "6f58fd0a-a9cb-3746-9219-384a156ff7bb"
            ]
          },
          "platform": {
            "type": "string",
            "enum": [
              "airbnb",
              "homeaway",
              "booking",
              "direct",
              "manual"
            ],
            "readOnly": true,
            "examples": [
              "homeaway"
            ]
          },
          "platform_id": {
            "type": "string",
            "description": "The reservation code",
            "examples": [
              "ABC123"
            ]
          },
          "booking_date": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-01T12:00:00Z"
            ]
          },
          "arrival_date": {
            "type": "string",
            "description": "This provides only the date, not the exact check-in time. Refer to check_in.",
            "format": "date-time",
            "examples": [
              "2019-01-03T00:00:00-05:00"
            ]
          },
          "departure_date": {
            "type": "string",
            "description": "This provides only the date, not the exact check-out time. Refer to check_out.",
            "format": "date-time",
            "examples": [
              "2019-01-05T00:00:00-05:00"
            ]
          },
          "nights": {
            "type": "integer"
          },
          "check_in": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-03T13:00:00-05:00"
            ]
          },
          "check_out": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-05T11:00:00-05:00"
            ]
          },
          "last_message_at": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2019-01-05T11:00:00-00:00"
            ]
          },
          "status": {
            "type": "string",
            "examples": [
              "booking"
            ],
            "x-deprecated": true
          },
          "reservation_status": {
            "type": "object",
            "properties": {
              "current": {
                "$ref": "#/components/schemas/Reservation_Status"
              },
              "history": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Reservation_Status"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "changed_at": {
                          "type": "string",
                          "examples": [
                            "2019-01-03T12:00:00-05:00"
                          ]
                        }
                      },
                      "required": [
                        "changed_at"
                      ]
                    }
                  ]
                }
              }
            },
            "required": [
              "current",
              "history"
            ]
          },
          "status_history": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "category": {
                  "type": "string",
                  "examples": [
                    "accepted"
                  ]
                },
                "sub_category": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "examples": [
                    "accepted"
                  ]
                },
                "changed_at": {
                  "type": "string",
                  "examples": [
                    "2019-01-03T12:00:00-05:00"
                  ]
                }
              },
              "required": [
                "category",
                "sub_category",
                "changed_at"
              ]
            },
            "x-deprecated": true
          },
          "guests": {
            "type": "object",
            "properties": {
              "total": {
                "type": "integer",
                "default": 0,
                "examples": [
                  1
                ]
              },
              "adult_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  1
                ]
              },
              "child_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              },
              "infant_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              },
              "pet_count": {
                "type": "integer",
                "default": 0,
                "examples": [
                  0
                ]
              }
            },
            "required": [
              "total",
              "adult_count",
              "child_count",
              "infant_count",
              "pet_count"
            ]
          }
        },
        "required": [
          "id",
          "conversation_id",
          "platform",
          "platform_id",
          "booking_date",
          "arrival_date",
          "departure_date",
          "nights",
          "check_in",
          "check_out",
          "last_message_at",
          "status",
          "reservation_status",
          "status_history",
          "guests"
        ]
      },
      "Reservation_Status": {
        "type": "object",
        "title": "Reservation Status",
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "request",
              "accepted",
              "cancelled",
              "not accepted",
              "unknown"
            ],
            "description": "The overall status of the reservation"
          },
          "sub_category": {
            "type": "string",
            "enum": [
              "pending verification",
              "awaiting approval",
              "request to book",
              "request for payment",
              "declined",
              "withdrawn",
              "expired"
            ],
            "description": "The status of the reservation within a category"
          }
        },
        "required": [
          "category",
          "sub_category"
        ]
      },
      "FinancialsV2": {
        "type": "object",
        "properties": {
          "guest": {
            "type": "object",
            "properties": {
              "accommodation": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Accommodation"
                        ]
                      },
                      "category": {
                        "const": "Accommodation",
                        "examples": [
                          "Accommodation"
                        ]
                      }
                    }
                  }
                ]
              },
              "fees": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Guest Service Fee"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Guest fees",
                            "Other fee",
                            "Service fees"
                          ],
                          "examples": [
                            "Service fees"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "discounts": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Guest Discount"
                          ]
                        },
                        "category": {
                          "const": "Discounts",
                          "examples": [
                            "Discounts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "taxes": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Lodging taxes"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Host Tax",
                            "Taxes"
                          ],
                          "examples": [
                            "Taxes"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "adjustments": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Resolution Adjustment"
                          ]
                        },
                        "category": {
                          "const": "Total payouts",
                          "examples": [
                            "Total payouts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "total_price": {
                "description": "The total amount paid by the guest",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Guest Total Price"
                        ]
                      },
                      "category": {
                        "const": "Guest total price",
                        "examples": [
                          "Guest total price"
                        ]
                      }
                    }
                  }
                ]
              }
            },
            "required": [
              "fees",
              "discounts",
              "taxes",
              "adjustments"
            ]
          },
          "host": {
            "type": "object",
            "properties": {
              "accommodation": {
                "description": "The total accommodation amount",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Accommodation"
                        ]
                      },
                      "category": {
                        "const": "Accommodation",
                        "examples": [
                          "Accommodation"
                        ]
                      }
                    }
                  }
                ]
              },
              "accommodation_breakdown": {
                "type": "array",
                "description": "A breakdown of the price of each night of the reservation",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "format": "date",
                          "examples": [
                            "2024-01-01"
                          ]
                        },
                        "category": {
                          "const": "Accommodation",
                          "examples": [
                            "Accommodation"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "guest_fees": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Cleaning Fee"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Guest fees",
                            "Other fees",
                            "Service fees"
                          ],
                          "examples": [
                            "Other fees"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "host_fees": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Host Service Fee"
                          ]
                        },
                        "category": {
                          "const": "Service fees",
                          "examples": [
                            "Service fees"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "discounts": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Guest Discount"
                          ]
                        },
                        "category": {
                          "const": "Discounts",
                          "examples": [
                            "Discounts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "adjustments": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/NegativeFinancial"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "Resolution Adjustment"
                          ]
                        },
                        "category": {
                          "const": "Total payouts",
                          "examples": [
                            "Total payouts"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "taxes": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FinancialV2"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "examples": [
                            "City taxes"
                          ]
                        },
                        "category": {
                          "type": "string",
                          "enum": [
                            "Host Tax",
                            "Collect at check-in Tax"
                          ],
                          "examples": [
                            "Host Tax"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "revenue": {
                "description": "The total revenue of the reservation after service fees",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FinancialV2"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "examples": [
                          "Gross Revenue"
                        ]
                      },
                      "category": {
                        "const": "Revenue",
                        "examples": [
                          "Revenue"
                        ]
                      }
                    }
                  }
                ]
              }
            },
            "required": [
              "guest_fees",
              "host_fees",
              "discounts",
              "adjustments",
              "taxes"
            ]
          },
          "currency": {
            "type": "string",
            "examples": [
              "USD"
            ]
          }
        },
        "required": [
          "currency"
        ],
        "examples": [
          {
            "guest": {
              "accommodation": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Accommodation",
                "category": "Accommodation"
              },
              "fees": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Guest Service Fee",
                  "category": "Service fees"
                }
              ],
              "discounts": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Guest Discount",
                  "category": "Discount"
                }
              ],
              "taxes": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Lodging taxes",
                  "category": "Pass-through taxes"
                }
              ],
              "adjustments": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                },
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                }
              ],
              "total_price": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Guest Total Price",
                "category": "Total payment"
              }
            },
            "host": {
              "accommodation": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Accommodation",
                "category": "Accommodation"
              },
              "accommodation_breakdown": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "2024-01-01",
                  "category": "Accommodation"
                }
              ],
              "guest_fees": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Cleaning Fee",
                  "category": "Guest fees"
                }
              ],
              "host_fees": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Host Service Fee",
                  "category": "Service fees"
                }
              ],
              "discounts": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Guest Discount",
                  "category": "Discount"
                }
              ],
              "adjustments": [
                {
                  "amount": -12345,
                  "formatted": "$-123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                },
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "Resolution Adjustment",
                  "category": "Total payouts"
                }
              ],
              "taxes": [
                {
                  "amount": 12345,
                  "formatted": "$123.45",
                  "label": "City taxes",
                  "category": "Host Tax"
                }
              ],
              "revenue": {
                "amount": 12345,
                "formatted": "$123.45",
                "label": "Gross Revenue",
                "category": "Revenue"
              }
            },
            "currency": "USD"
          }
        ]
      },
      "FinancialV2": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "examples": [
              12345
            ]
          },
          "formatted": {
            "type": "string",
            "examples": [
              "$123.45"
            ]
          }
        }
      },
      "NegativeFinancial": {
        "type": "object",
        "title": "NegativeFinancial",
        "properties": {
          "amount": {
            "type": "integer",
            "examples": [
              -12345
            ]
          },
          "formatted": {
            "type": "string",
            "examples": [
              "$-123.45"
            ]
          }
        }
      },
      "Property": {
        "type": "object",
        "title": "Property",
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              "550e8400-e29b-41d4-a716-446655440000"
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Relaxing Villa near the sea"
            ]
          },
          "public_name": {
            "type": "string",
            "examples": [
              "Relaxing Villa near the sea"
            ]
          },
          "picture": {
            "type": "string",
            "examples": [
              "https://cdn2.thecatapi.com/images/d9m.jpg"
            ]
          },
          "address": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "description": "Apartment or unit number.",
                "examples": [
                  "32"
                ]
              },
              "street": {
                "type": "string",
                "examples": [
                  "Senefelderplatz"
                ]
              },
              "city": {
                "type": "string",
                "examples": [
                  "Berlin"
                ]
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string",
                "examples": [
                  "DE"
                ]
              },
              "postcode": {
                "type": "string",
                "examples": [
                  "10405"
                ]
              },
              "coordinates": {
                "type": "object",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "default": 0,
                    "examples": [
                      50.8514786
                    ]
                  },
                  "longitude": {
                    "type": "number",
                    "default": 0,
                    "examples": [
                      4.364562
                    ]
                  }
                },
                "required": [
                  "latitude",
                  "longitude"
                ]
              },
              "display": {
                "type": "string",
                "examples": [
                  "37a Senefelderplatz, 10405 Berlin, DE"
                ]
              }
            },
            "required": [
              "number",
              "street",
              "city",
              "state",
              "country",
              "postcode",
              "coordinates",
              "display"
            ]
          },
          "timezone": {
            "type": "string",
            "examples": [
              "+0200"
            ]
          },
          "listed": {
            "type": "boolean",
            "default": true,
            "examples": [
              true
            ]
          },
          "amenities": {
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "shower"
              ]
            }
          },
          "description": {
            "type": "string",
            "examples": [
              "Example Description"
            ]
          },
          "summary": {
            "type": "string",
            "examples": [
              "Example Summary"
            ]
          },
          "check-in": {
            "type": "string",
            "description": "The default checkin time for the property.",
            "examples": [
              "12:30"
            ]
          },
          "check-out": {
            "type": "string",
            "description": "The default checkout time for the property.",
            "examples": [
              "12:30"
            ]
          },
          "currency": {
            "type": "string",
            "examples": [
              "EUR"
            ]
          },
          "capacity": {
            "type": "object",
            "properties": {
              "max": {
                "type": [
                  "integer",
                  "null"
                ],
                "default": 0,
                "examples": [
                  2
                ]
              },
              "bedrooms": {
                "type": [
                  "integer",
                  "null"
                ],
                "default": 0,
                "examples": [
                  1
                ]
              },
              "beds": {
                "type": [
                  "number",
                  "null"
                ],
                "default": 0,
                "examples": [
                  1
                ]
              },
              "bathrooms": {
                "type": [
                  "number",
                  "null"
                ],
                "default": 0,
                "examples": [
                  1.5
                ]
              }
            }
          },
          "room_details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "examples": [
                    "king_size"
                  ]
                },
                "quantity": {
                  "type": "integer",
                  "default": 0,
                  "examples": [
                    1
                  ]
                }
              },
              "required": [
                "type",
                "quantity"
              ]
            }
          },
          "house_rules": {
            "type": "object",
            "properties": {
              "pets_allowed": {
                "type": "boolean",
                "default": true,
                "examples": [
                  true
                ]
              },
              "smoking_allowed": {
                "type": "boolean",
                "default": true,
                "examples": [
                  false
                ]
              },
              "events_allowed": {}
            },
            "required": [
              "pets_allowed",
              "smoking_allowed",
              "events_allowed"
            ]
          },
          "listings": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string",
                  "examples": [
                    "airbnb"
                  ]
                },
                "platform_id": {
                  "type": "string",
                  "description": "This is the listing id used on the platform.",
                  "examples": [
                    "24488"
                  ]
                },
                "platform_name": {
                  "type": "string",
                  "description": "`pat:read` scope only"
                },
                "platform_email": {
                  "type": "string",
                  "description": "`pat:read` scope only"
                }
              },
              "required": [
                "platform",
                "platform_id",
                "platform_name",
                "platform_email"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Tag"
              ]
            }
          },
          "property_type": {
            "type": "string"
          },
          "room_type": {
            "type": "string"
          },
          "calendar_restricted": {
            "type": "boolean",
            "description": "If a property is `calendar_restricted` its calendar will not be able to be updated using the Update Property Calendar endpoint"
          },
          "parent_child": {
            "type": [
              "object",
              "null"
            ],
            "description": "If the property is in a Parent/Child setup then this will contain all the information about that relationship.",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "parent",
                  "child"
                ],
                "description": "If this property is the parent or child in the relationship."
              },
              "parent": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "If this property is a child, this is the parent property id.",
                "examples": [
                  "550e8400-e29b-41d4-a716-446655440000"
                ]
              },
              "children": {
                "type": "array",
                "description": "If this property is a parent, this is any child property ids",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "examples": [
                    "550e8400-e29b-41d4-a716-446655440000"
                  ]
                }
              },
              "siblings": {
                "type": "array",
                "description": "If this property is a child, this is any sibling property ids. These are other child properties of this properties parent.",
                "items": {
                  "type": "string",
                  "format": "uuid",
                  "examples": [
                    "550e8400-e29b-41d4-a716-446655440000"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "id",
          "name",
          "public_name",
          "picture",
          "address",
          "timezone",
          "listed",
          "amenities",
          "description",
          "summary",
          "check-in",
          "check-out",
          "currency",
          "capacity",
          "room_details",
          "house_rules",
          "listings",
          "tags",
          "property_type",
          "room_type",
          "calendar_restricted"
        ],
        "examples": [],
        "x-examples": {
          "Example 1": {
            "id": "550e8400-e29b-41d4-a716-446655440000",
            "name": "Relaxing Villa near the sea",
            "public_name": "Relaxing Villa near the sea",
            "picture": "https://cdn2.thecatapi.com/images/d9m.jpg",
            "address": {
              "number": "32",
              "street": "Senefelderplatz",
              "city": "Berlin",
              "state": "",
              "country": "DE",
              "postcode": "10405",
              "coordinates": {
                "latitude": 50.8514786,
                "longitude": 4.364562
              },
              "display": "37a Senefelderplatz, 10405 Berlin, DE"
            },
            "timezone": "+0200",
            "listed": true,
            "amenities": [
              "shower",
              "oven"
            ],
            "description": "Example Description",
            "summary": "Example Summary",
            "check-in": "12:30",
            "currency": "EUR",
            "capacity": {
              "max": 2,
              "bedrooms": 1,
              "beds": 1,
              "bathrooms": 1
            },
            "room_details": [
              {
                "type": "king_size",
                "quantity": 1
              }
            ],
            "house_rules": {
              "pets_allowed": true,
              "smoking_allowed": false,
              "events_allowed": null
            },
            "listings": [
              {
                "platform": "airbnb",
                "platform_id": "24488"
              }
            ],
            "tags": [
              "Tag1",
              "Tag2"
            ]
          }
        }
      },
      "user": {
        "type": "object",
        "title": "user",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Review": {
        "type": "object",
        "title": "Review",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "examples": [
              "550e8400-e29b-41d4-a716-446655440000"
            ]
          },
          "platform": {
            "type": "string",
            "enum": [
              "airbnb",
              "direct"
            ],
            "examples": [
              "airbnb"
            ]
          },
          "public": {
            "type": "object",
            "properties": {
              "rating": {
                "type": "integer",
                "minimum": 1,
                "maximum": 5
              },
              "review": {
                "type": "string",
                "examples": [
                  "Great place we will be back!"
                ]
              },
              "response": {
                "type": "string",
                "examples": [
                  "So happy you enjoyed it so much!"
                ]
              }
            },
            "required": [
              "rating",
              "review",
              "response"
            ]
          },
          "private": {
            "type": "object",
            "properties": {
              "feedback": {
                "type": "string",
                "examples": [
                  "downstairs was a bit cold."
                ]
              },
              "detailed_ratings": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "cleanliness",
                        "communication",
                        "location",
                        "checkin",
                        "accuracy",
                        "value"
                      ]
                    },
                    "rating": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 5
                    },
                    "comment": {
                      "type": "string",
                      "examples": [
                        "The cabin was cozy and comfy."
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "feedback"
            ]
          },
          "responded_at": {
            "type": "string",
            "format": "date-time"
          },
          "reviewed_at": {
            "type": "string",
            "format": "date-time",
            "examples": [
              "2024-03-19T10:00:00Z"
            ]
          },
          "can_respond": {
            "type": "boolean"
          },
          "guest": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string"
              },
              "last_name": {
                "type": "string"
              },
              "language": {
                "type": "string",
                "description": "The guest's preferred language"
              }
            },
            "required": [
              "first_name",
              "last_name"
            ]
          },
          "reservation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "examples": [
                  "550e8400-e29b-41d4-a716-446655440000"
                ]
              },
              "code": {
                "type": "string"
              },
              "check_in": {
                "type": "string",
                "format": "date-time"
              },
              "check_out": {
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "id",
              "code",
              "check_in",
              "check_out"
            ]
          },
          "property": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "public_name": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "public_name"
            ]
          },
          "listing": {
            "type": "object",
            "properties": {
              "platform": {
                "type": "string",
                "examples": [
                  "airbnb"
                ]
              },
              "platform_id": {
                "type": "string"
              }
            },
            "required": [
              "platform",
              "platform_id"
            ]
          }
        },
        "required": [
          "id",
          "platform",
          "public",
          "private"
        ]
      },
      "PropertyFull": {
        "title": "PropertyFull",
        "allOf": [
          {
            "$ref": "#/components/schemas/Property"
          },
          {
            "type": "object",
            "properties": {
              "bookings": {
                "$ref": "#/components/schemas/Property_bookings"
              },
              "details": {
                "$ref": "#/components/schemas/Property_details"
              },
              "user": {
                "$ref": "#/components/schemas/user"
              }
            }
          }
        ]
      },
      "Property_bookings": {
        "type": "object",
        "title": "Property_bookings",
        "properties": {
          "booking_policies": {
            "type": "object",
            "properties": {
              "cancellation": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "100% refund 24 hours after booking accepted, if booking is requested at least 24 hours before check-in"
                  ]
                }
              },
              "payment_terms": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "aligned",
                      "disabled",
                      "manual"
                    ]
                  },
                  "description": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "50% due 10 days before check-in"
                      ]
                    }
                  },
                  "grace_period": {
                    "type": "string",
                    "description": "Grace period in hours on missed payments before cancelling a booking",
                    "examples": [
                      "48 hours"
                    ]
                  }
                },
                "required": [
                  "status",
                  "description",
                  "grace_period"
                ],
                "examples": [
                  "Guests always pay 100% upfront"
                ]
              }
            },
            "required": [
              "cancellation",
              "payment_terms"
            ]
          },
          "listing_markups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "booking",
                    "airbnb",
                    "vrbo",
                    "direct",
                    "agoda"
                  ]
                },
                "type": {
                  "const": "percent"
                },
                "value": {
                  "type": "number",
                  "default": 15
                }
              },
              "required": [
                "platform",
                "type",
                "value"
              ]
            }
          },
          "security_deposits": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "enum": [
                    "base",
                    "direct"
                  ]
                },
                "type": {
                  "const": "fixed"
                },
                "value": {
                  "$ref": "#/components/schemas/FinancialV2"
                }
              },
              "required": [
                "name",
                "type",
                "value"
              ]
            }
          },
          "occupancy_based_rules": {
            "type": "object",
            "properties": {
              "guests_included": {
                "type": "integer",
                "description": "The number of guests included in the base fee.",
                "minimum": 1
              },
              "extra_guest_fee": {
                "type": "object",
                "description": "The fee for any guests above the guests_included.",
                "properties": {
                  "type": {
                    "const": "fixed"
                  },
                  "value": {
                    "$ref": "#/components/schemas/FinancialV2"
                  }
                },
                "required": [
                  "type",
                  "value"
                ]
              },
              "pet_fee": {
                "type": [
                  "object",
                  "null"
                ],
                "description": "The fee per pet; does not include service animals",
                "properties": {
                  "type": {
                    "const": "fixed"
                  },
                  "value": {
                    "$ref": "#/components/schemas/FinancialV2"
                  }
                },
                "required": [
                  "type",
                  "value"
                ]
              }
            },
            "required": [
              "guests_included",
              "extra_guest_fee",
              "pet_fee"
            ]
          },
          "fees": {
            "type": "array",
            "description": "All fees that will be applied to a booking",
            "items": {
              "type": "object",
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "cleaning_fee",
                        "linens_fee",
                        "management_fee",
                        "community_fee",
                        "resort_fee"
                      ],
                      "examples": [
                        "cleaning_fee"
                      ]
                    },
                    "type": {
                      "const": "fixed"
                    },
                    "value": {
                      "$ref": "#/components/schemas/FinancialV2"
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": [
                        "cleaning_fee",
                        "linens_fee",
                        "management_fee",
                        "community_fee",
                        "resort_fee"
                      ],
                      "examples": [
                        "management_fee"
                      ]
                    },
                    "type": {
                      "const": "percent",
                      "default": "percent",
                      "examples": [
                        "percent"
                      ]
                    },
                    "value": {
                      "type": "number",
                      "format": "float"
                    }
                  }
                }
              ]
            }
          },
          "discounts": {
            "type": "array",
            "description": "Discounts that could be applied to a booking",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "enum": [
                    "weekly",
                    "monthly"
                  ]
                },
                "type": {
                  "const": "percent"
                },
                "value": {
                  "type": "number",
                  "format": "float"
                }
              }
            }
          }
        },
        "required": [
          "booking_policies",
          "listing_markups",
          "security_deposits",
          "occupancy_based_rules"
        ],
        "examples": [
          {
            "booking_policies": {
              "cancellation": [
                "100% refund 24 hours after booking accepted, if booking is requested at least 24 hours before check-in"
              ],
              "payment_terms": {
                "status": "manual",
                "description": [
                  "20% due at booking",
                  "30% due 45 days before check-in",
                  "50% due 10 days before check-in"
                ],
                "grace_period": "48 hours"
              }
            },
            "listing_markups": [
              {
                "platform": "booking",
                "type": "percent",
                "value": 15
              }
            ],
            "security_deposits": [
              {
                "name": "base",
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              },
              {
                "name": "direct",
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              }
            ],
            "occupancy_based_rules": {
              "guests_included": 1,
              "extra_guest_fee": {
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              },
              "pet_fee": {
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              }
            },
            "fees": [
              {
                "name": "cleaning_fee",
                "type": "fixed",
                "value": {
                  "amount": 12345,
                  "formatted": "$123.45"
                }
              },
              {
                "name": "managment_fee",
                "type": "percent",
                "value": 10
              }
            ],
            "discounts": [
              {
                "name": "weekly",
                "type": "percent",
                "value": 10
              },
              {
                "name": "monthly",
                "type": "percent",
                "value": 10
              }
            ]
          }
        ]
      },
      "Property_details": {
        "type": "object",
        "title": "Property_details",
        "properties": {
          "space_overview": {
            "type": "string"
          },
          "guest_access": {
            "type": "string"
          },
          "house_manual": {
            "type": "string"
          },
          "other_details": {
            "type": "string"
          },
          "additional_rules": {
            "type": "string"
          },
          "neighborhood_description": {
            "type": "string"
          },
          "getting_around": {
            "type": "string"
          },
          "wifi_name": {
            "type": "string"
          },
          "wifi_password": {
            "type": "string"
          }
        }
      },
      "Message": {
        "type": "object",
        "title": "Message",
        "properties": {
          "platform": {
            "type": "string",
            "examples": [
              "airbnb"
            ]
          },
          "platform_id": {
            "type": "integer",
            "default": 0,
            "examples": [
              1130024
            ]
          },
          "conversation_id": {
            "type": "string",
            "examples": [
              "becd1474-ccd1-40bf-9ce8-04456bfa338d"
            ]
          },
          "reservation_id": {
            "anyOf": [
              {
                "type": "string",
                "examples": [
                  "becd1474-ccd1-40bf-9ce8-04456bfa338d"
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "content_type": {
            "type": "string",
            "examples": [
              "text/plain"
            ]
          },
          "body": {
            "type": "string",
            "examples": [
              "Hello, there."
            ]
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "const": "image"
                },
                "url": {
                  "type": "string",
                  "default": "The image location URL"
                }
              }
            }
          },
          "sender_type": {
            "type": "string",
            "examples": [
              "host|guest"
            ]
          },
          "sender_role": {
            "type": "string",
            "examples": [
              "host|co-host|teammate|null"
            ]
          },
          "sender": {
            "type": "object",
            "properties": {
              "first_name": {
                "type": "string",
                "examples": [
                  "Jane"
                ]
              },
              "full_name": {
                "type": "string",
                "examples": [
                  "Jane Doe"
                ]
              },
              "locale": {
                "type": "string",
                "examples": [
                  "en"
                ]
              },
              "picture_url": {
                "type": "string",
                "examples": [
                  "https://a0.muscache.com/im/pictures/user/f391da23-c76e-4728-a9f2-25cc139a13cc.jpg?aki_policy=profile_x_medium"
                ]
              },
              "thumbnail_url": {
                "type": "string",
                "examples": [
                  "https://a0.muscache.com/im/pictures/user/f391da23-c76e-4728-a9f2-25cc139a13cc.jpg?aki_policy=profile_x_medium"
                ]
              },
              "location": {}
            }
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "created_at": {
            "type": "string",
            "examples": [
              "2019-07-29T19:01:14Z"
            ]
          }
        }
      }
    }
  },
  "x-readme": {
    "headers": [],
    "explorer-enabled": true,
    "proxy-enabled": true
  },
  "x-readme-fauxas": true
}